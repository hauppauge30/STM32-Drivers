
stm32_dev.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000bf4  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000db8  08000dc0  00001dc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000db8  08000db8  00001dc0  2**0
                  CONTENTS
  4 .ARM          00000000  08000db8  08000db8  00001dc0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000db8  08000dc0  00001dc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000db8  08000db8  00001db8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000dbc  08000dbc  00001dbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001dc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000dc0  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000dc0  00002020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001dc0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001569  00000000  00000000  00001df0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003d2  00000000  00000000  00003359  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00003730  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000084  00000000  00000000  000037f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000c92  00000000  00000000  00003874  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000a15  00000000  00000000  00004506  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003e49  00000000  00000000  00004f1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00008d64  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001dc  00000000  00000000  00008da8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000068  00000000  00000000  00008f84  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000da0 	.word	0x08000da0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000da0 	.word	0x08000da0

08000204 <vDoConfigurePin>:
#define AHB1_GPIOH ((Registers_GPIO *)(GPIOH_BASE))
#define AHB1_GPIOI ((Registers_GPIO *)(GPIOI_BASE))

unsigned int debug;
void vDoConfigurePin(gpio_ports Port, gpio_pins Pin, eModesForGPIOx_MODER u2Mode)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	4603      	mov	r3, r0
 800020c:	71fb      	strb	r3, [r7, #7]
 800020e:	460b      	mov	r3, r1
 8000210:	71bb      	strb	r3, [r7, #6]
 8000212:	4613      	mov	r3, r2
 8000214:	717b      	strb	r3, [r7, #5]
    // Calculate the position of the pin in the MODER register
	uint32 position = Pin * 2;
 8000216:	79bb      	ldrb	r3, [r7, #6]
 8000218:	005b      	lsls	r3, r3, #1
 800021a:	60fb      	str	r3, [r7, #12]

    switch (Port)
 800021c:	79fb      	ldrb	r3, [r7, #7]
 800021e:	2b07      	cmp	r3, #7
 8000220:	f200 80c4 	bhi.w	80003ac <vDoConfigurePin+0x1a8>
 8000224:	a201      	add	r2, pc, #4	@ (adr r2, 800022c <vDoConfigurePin+0x28>)
 8000226:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800022a:	bf00      	nop
 800022c:	0800024d 	.word	0x0800024d
 8000230:	08000279 	.word	0x08000279
 8000234:	080002a5 	.word	0x080002a5
 8000238:	080002d1 	.word	0x080002d1
 800023c:	080002fd 	.word	0x080002fd
 8000240:	08000329 	.word	0x08000329
 8000244:	08000355 	.word	0x08000355
 8000248:	08000381 	.word	0x08000381
    {
        case PORTA:
            // Clear the existing mode for the specified pin
            AHB1_GPIOA->GPIOx_MODER.GPIOx_MODER_Reg &= ~(0x3 << position);
 800024c:	4b5b      	ldr	r3, [pc, #364]	@ (80003bc <vDoConfigurePin+0x1b8>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	2103      	movs	r1, #3
 8000252:	68fa      	ldr	r2, [r7, #12]
 8000254:	fa01 f202 	lsl.w	r2, r1, r2
 8000258:	43d2      	mvns	r2, r2
 800025a:	4611      	mov	r1, r2
 800025c:	4a57      	ldr	r2, [pc, #348]	@ (80003bc <vDoConfigurePin+0x1b8>)
 800025e:	400b      	ands	r3, r1
 8000260:	6013      	str	r3, [r2, #0]
            // Set the new mode for the specified pin
            AHB1_GPIOA->GPIOx_MODER.GPIOx_MODER_Reg |= (u2Mode) << position;
 8000262:	4b56      	ldr	r3, [pc, #344]	@ (80003bc <vDoConfigurePin+0x1b8>)
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	7979      	ldrb	r1, [r7, #5]
 8000268:	68fa      	ldr	r2, [r7, #12]
 800026a:	fa01 f202 	lsl.w	r2, r1, r2
 800026e:	4611      	mov	r1, r2
 8000270:	4a52      	ldr	r2, [pc, #328]	@ (80003bc <vDoConfigurePin+0x1b8>)
 8000272:	430b      	orrs	r3, r1
 8000274:	6013      	str	r3, [r2, #0]
            break; // Exit the switch after each case
 8000276:	e09a      	b.n	80003ae <vDoConfigurePin+0x1aa>
        case PORTB:
            // Clear the existing mode for the specified pin
            AHB1_GPIOB->GPIOx_MODER.GPIOx_MODER_Reg &= ~(0x3 << position);
 8000278:	4b51      	ldr	r3, [pc, #324]	@ (80003c0 <vDoConfigurePin+0x1bc>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	2103      	movs	r1, #3
 800027e:	68fa      	ldr	r2, [r7, #12]
 8000280:	fa01 f202 	lsl.w	r2, r1, r2
 8000284:	43d2      	mvns	r2, r2
 8000286:	4611      	mov	r1, r2
 8000288:	4a4d      	ldr	r2, [pc, #308]	@ (80003c0 <vDoConfigurePin+0x1bc>)
 800028a:	400b      	ands	r3, r1
 800028c:	6013      	str	r3, [r2, #0]
            // Set the new mode for the specified pin
            AHB1_GPIOB->GPIOx_MODER.GPIOx_MODER_Reg |= (u2Mode) << position;
 800028e:	4b4c      	ldr	r3, [pc, #304]	@ (80003c0 <vDoConfigurePin+0x1bc>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	7979      	ldrb	r1, [r7, #5]
 8000294:	68fa      	ldr	r2, [r7, #12]
 8000296:	fa01 f202 	lsl.w	r2, r1, r2
 800029a:	4611      	mov	r1, r2
 800029c:	4a48      	ldr	r2, [pc, #288]	@ (80003c0 <vDoConfigurePin+0x1bc>)
 800029e:	430b      	orrs	r3, r1
 80002a0:	6013      	str	r3, [r2, #0]
            break;
 80002a2:	e084      	b.n	80003ae <vDoConfigurePin+0x1aa>
        case PORTC:
            // Clear the existing mode for the specified pin
            AHB1_GPIOC->GPIOx_MODER.GPIOx_MODER_Reg &= ~(0x3 << position);
 80002a4:	4b47      	ldr	r3, [pc, #284]	@ (80003c4 <vDoConfigurePin+0x1c0>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	2103      	movs	r1, #3
 80002aa:	68fa      	ldr	r2, [r7, #12]
 80002ac:	fa01 f202 	lsl.w	r2, r1, r2
 80002b0:	43d2      	mvns	r2, r2
 80002b2:	4611      	mov	r1, r2
 80002b4:	4a43      	ldr	r2, [pc, #268]	@ (80003c4 <vDoConfigurePin+0x1c0>)
 80002b6:	400b      	ands	r3, r1
 80002b8:	6013      	str	r3, [r2, #0]
            // Set the new mode for the specified pin
            AHB1_GPIOC->GPIOx_MODER.GPIOx_MODER_Reg |= (u2Mode) << position;
 80002ba:	4b42      	ldr	r3, [pc, #264]	@ (80003c4 <vDoConfigurePin+0x1c0>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	7979      	ldrb	r1, [r7, #5]
 80002c0:	68fa      	ldr	r2, [r7, #12]
 80002c2:	fa01 f202 	lsl.w	r2, r1, r2
 80002c6:	4611      	mov	r1, r2
 80002c8:	4a3e      	ldr	r2, [pc, #248]	@ (80003c4 <vDoConfigurePin+0x1c0>)
 80002ca:	430b      	orrs	r3, r1
 80002cc:	6013      	str	r3, [r2, #0]
            break;
 80002ce:	e06e      	b.n	80003ae <vDoConfigurePin+0x1aa>
        case PORTD:
            // Clear the existing mode for the specified pin
            AHB1_GPIOD->GPIOx_MODER.GPIOx_MODER_Reg &= ~(0x3 << position);
 80002d0:	4b3d      	ldr	r3, [pc, #244]	@ (80003c8 <vDoConfigurePin+0x1c4>)
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	2103      	movs	r1, #3
 80002d6:	68fa      	ldr	r2, [r7, #12]
 80002d8:	fa01 f202 	lsl.w	r2, r1, r2
 80002dc:	43d2      	mvns	r2, r2
 80002de:	4611      	mov	r1, r2
 80002e0:	4a39      	ldr	r2, [pc, #228]	@ (80003c8 <vDoConfigurePin+0x1c4>)
 80002e2:	400b      	ands	r3, r1
 80002e4:	6013      	str	r3, [r2, #0]
            // Set the new mode for the specified pin
            AHB1_GPIOD->GPIOx_MODER.GPIOx_MODER_Reg |= (u2Mode) << position;
 80002e6:	4b38      	ldr	r3, [pc, #224]	@ (80003c8 <vDoConfigurePin+0x1c4>)
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	7979      	ldrb	r1, [r7, #5]
 80002ec:	68fa      	ldr	r2, [r7, #12]
 80002ee:	fa01 f202 	lsl.w	r2, r1, r2
 80002f2:	4611      	mov	r1, r2
 80002f4:	4a34      	ldr	r2, [pc, #208]	@ (80003c8 <vDoConfigurePin+0x1c4>)
 80002f6:	430b      	orrs	r3, r1
 80002f8:	6013      	str	r3, [r2, #0]
            break;
 80002fa:	e058      	b.n	80003ae <vDoConfigurePin+0x1aa>
        case PORTE:
            // Clear the existing mode for the specified pin
            AHB1_GPIOE->GPIOx_MODER.GPIOx_MODER_Reg &= ~(0x3 << position);
 80002fc:	4b33      	ldr	r3, [pc, #204]	@ (80003cc <vDoConfigurePin+0x1c8>)
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	2103      	movs	r1, #3
 8000302:	68fa      	ldr	r2, [r7, #12]
 8000304:	fa01 f202 	lsl.w	r2, r1, r2
 8000308:	43d2      	mvns	r2, r2
 800030a:	4611      	mov	r1, r2
 800030c:	4a2f      	ldr	r2, [pc, #188]	@ (80003cc <vDoConfigurePin+0x1c8>)
 800030e:	400b      	ands	r3, r1
 8000310:	6013      	str	r3, [r2, #0]
            // Set the new mode for the specified pin
            AHB1_GPIOE->GPIOx_MODER.GPIOx_MODER_Reg |= (u2Mode) << position;
 8000312:	4b2e      	ldr	r3, [pc, #184]	@ (80003cc <vDoConfigurePin+0x1c8>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	7979      	ldrb	r1, [r7, #5]
 8000318:	68fa      	ldr	r2, [r7, #12]
 800031a:	fa01 f202 	lsl.w	r2, r1, r2
 800031e:	4611      	mov	r1, r2
 8000320:	4a2a      	ldr	r2, [pc, #168]	@ (80003cc <vDoConfigurePin+0x1c8>)
 8000322:	430b      	orrs	r3, r1
 8000324:	6013      	str	r3, [r2, #0]
            break;
 8000326:	e042      	b.n	80003ae <vDoConfigurePin+0x1aa>
        case PORTF:
            // Clear the existing mode for the specified pin
            AHB1_GPIOF->GPIOx_MODER.GPIOx_MODER_Reg &= ~(0x3 << position);
 8000328:	4b29      	ldr	r3, [pc, #164]	@ (80003d0 <vDoConfigurePin+0x1cc>)
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	2103      	movs	r1, #3
 800032e:	68fa      	ldr	r2, [r7, #12]
 8000330:	fa01 f202 	lsl.w	r2, r1, r2
 8000334:	43d2      	mvns	r2, r2
 8000336:	4611      	mov	r1, r2
 8000338:	4a25      	ldr	r2, [pc, #148]	@ (80003d0 <vDoConfigurePin+0x1cc>)
 800033a:	400b      	ands	r3, r1
 800033c:	6013      	str	r3, [r2, #0]
            // Set the new mode for the specified pin
            AHB1_GPIOF->GPIOx_MODER.GPIOx_MODER_Reg |= (u2Mode) << position;
 800033e:	4b24      	ldr	r3, [pc, #144]	@ (80003d0 <vDoConfigurePin+0x1cc>)
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	7979      	ldrb	r1, [r7, #5]
 8000344:	68fa      	ldr	r2, [r7, #12]
 8000346:	fa01 f202 	lsl.w	r2, r1, r2
 800034a:	4611      	mov	r1, r2
 800034c:	4a20      	ldr	r2, [pc, #128]	@ (80003d0 <vDoConfigurePin+0x1cc>)
 800034e:	430b      	orrs	r3, r1
 8000350:	6013      	str	r3, [r2, #0]
            break;
 8000352:	e02c      	b.n	80003ae <vDoConfigurePin+0x1aa>
        case PORTG:
            // Clear the existing mode for the specified pin
            AHB1_GPIOG->GPIOx_MODER.GPIOx_MODER_Reg &= ~(0x3 << position);
 8000354:	4b1f      	ldr	r3, [pc, #124]	@ (80003d4 <vDoConfigurePin+0x1d0>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	2103      	movs	r1, #3
 800035a:	68fa      	ldr	r2, [r7, #12]
 800035c:	fa01 f202 	lsl.w	r2, r1, r2
 8000360:	43d2      	mvns	r2, r2
 8000362:	4611      	mov	r1, r2
 8000364:	4a1b      	ldr	r2, [pc, #108]	@ (80003d4 <vDoConfigurePin+0x1d0>)
 8000366:	400b      	ands	r3, r1
 8000368:	6013      	str	r3, [r2, #0]
            // Set the new mode for the specified pin
            AHB1_GPIOG->GPIOx_MODER.GPIOx_MODER_Reg |= (u2Mode) << position;
 800036a:	4b1a      	ldr	r3, [pc, #104]	@ (80003d4 <vDoConfigurePin+0x1d0>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	7979      	ldrb	r1, [r7, #5]
 8000370:	68fa      	ldr	r2, [r7, #12]
 8000372:	fa01 f202 	lsl.w	r2, r1, r2
 8000376:	4611      	mov	r1, r2
 8000378:	4a16      	ldr	r2, [pc, #88]	@ (80003d4 <vDoConfigurePin+0x1d0>)
 800037a:	430b      	orrs	r3, r1
 800037c:	6013      	str	r3, [r2, #0]
            break;
 800037e:	e016      	b.n	80003ae <vDoConfigurePin+0x1aa>
        case PORTH:
            // Clear the existing mode for the specified pin
            AHB1_GPIOH->GPIOx_MODER.GPIOx_MODER_Reg &= ~(0x3 << position);
 8000380:	4b15      	ldr	r3, [pc, #84]	@ (80003d8 <vDoConfigurePin+0x1d4>)
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	2103      	movs	r1, #3
 8000386:	68fa      	ldr	r2, [r7, #12]
 8000388:	fa01 f202 	lsl.w	r2, r1, r2
 800038c:	43d2      	mvns	r2, r2
 800038e:	4611      	mov	r1, r2
 8000390:	4a11      	ldr	r2, [pc, #68]	@ (80003d8 <vDoConfigurePin+0x1d4>)
 8000392:	400b      	ands	r3, r1
 8000394:	6013      	str	r3, [r2, #0]
            // Set the new mode for the specified pin
            AHB1_GPIOH->GPIOx_MODER.GPIOx_MODER_Reg |= (u2Mode) << position;
 8000396:	4b10      	ldr	r3, [pc, #64]	@ (80003d8 <vDoConfigurePin+0x1d4>)
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	7979      	ldrb	r1, [r7, #5]
 800039c:	68fa      	ldr	r2, [r7, #12]
 800039e:	fa01 f202 	lsl.w	r2, r1, r2
 80003a2:	4611      	mov	r1, r2
 80003a4:	4a0c      	ldr	r2, [pc, #48]	@ (80003d8 <vDoConfigurePin+0x1d4>)
 80003a6:	430b      	orrs	r3, r1
 80003a8:	6013      	str	r3, [r2, #0]
            break;
 80003aa:	e000      	b.n	80003ae <vDoConfigurePin+0x1aa>
        default:
            // Invalid port, do nothing or handle the error accordingly
            break;
 80003ac:	bf00      	nop
    }
}
 80003ae:	bf00      	nop
 80003b0:	3714      	adds	r7, #20
 80003b2:	46bd      	mov	sp, r7
 80003b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b8:	4770      	bx	lr
 80003ba:	bf00      	nop
 80003bc:	40020000 	.word	0x40020000
 80003c0:	40020400 	.word	0x40020400
 80003c4:	40020800 	.word	0x40020800
 80003c8:	40020c00 	.word	0x40020c00
 80003cc:	40021000 	.word	0x40021000
 80003d0:	40021400 	.word	0x40021400
 80003d4:	40021800 	.word	0x40021800
 80003d8:	40021c00 	.word	0x40021c00

080003dc <vDoSetPin>:


void vDoSetPin(gpio_ports Port, gpio_pins Pin)
{
 80003dc:	b480      	push	{r7}
 80003de:	b085      	sub	sp, #20
 80003e0:	af00      	add	r7, sp, #0
 80003e2:	4603      	mov	r3, r0
 80003e4:	460a      	mov	r2, r1
 80003e6:	71fb      	strb	r3, [r7, #7]
 80003e8:	4613      	mov	r3, r2
 80003ea:	71bb      	strb	r3, [r7, #6]
    // Calculate the position of the pin in the ODR register
	uint32 position = Pin;
 80003ec:	79bb      	ldrb	r3, [r7, #6]
 80003ee:	60fb      	str	r3, [r7, #12]

    switch (Port)
 80003f0:	79fb      	ldrb	r3, [r7, #7]
 80003f2:	2b07      	cmp	r3, #7
 80003f4:	f200 80cc 	bhi.w	8000590 <vDoSetPin+0x1b4>
 80003f8:	a201      	add	r2, pc, #4	@ (adr r2, 8000400 <vDoSetPin+0x24>)
 80003fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003fe:	bf00      	nop
 8000400:	08000421 	.word	0x08000421
 8000404:	0800045d 	.word	0x0800045d
 8000408:	08000489 	.word	0x08000489
 800040c:	080004b5 	.word	0x080004b5
 8000410:	080004e1 	.word	0x080004e1
 8000414:	0800050d 	.word	0x0800050d
 8000418:	08000539 	.word	0x08000539
 800041c:	08000565 	.word	0x08000565
    {
        case PORTA:
            // Clear the existing state for the specified pin
        	debug = AHB1_GPIOA->GPIOx_ODR.u32GPIOx_ODR_Reg;
 8000420:	4b5f      	ldr	r3, [pc, #380]	@ (80005a0 <vDoSetPin+0x1c4>)
 8000422:	699b      	ldr	r3, [r3, #24]
 8000424:	4a5f      	ldr	r2, [pc, #380]	@ (80005a4 <vDoSetPin+0x1c8>)
 8000426:	6013      	str	r3, [r2, #0]
            AHB1_GPIOA->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 8000428:	4b5d      	ldr	r3, [pc, #372]	@ (80005a0 <vDoSetPin+0x1c4>)
 800042a:	699b      	ldr	r3, [r3, #24]
 800042c:	2101      	movs	r1, #1
 800042e:	68fa      	ldr	r2, [r7, #12]
 8000430:	fa01 f202 	lsl.w	r2, r1, r2
 8000434:	43d2      	mvns	r2, r2
 8000436:	4611      	mov	r1, r2
 8000438:	4a59      	ldr	r2, [pc, #356]	@ (80005a0 <vDoSetPin+0x1c4>)
 800043a:	400b      	ands	r3, r1
 800043c:	6193      	str	r3, [r2, #24]
            // Set the new mode for the specified pin
            AHB1_GPIOA->GPIOx_ODR.u32GPIOx_ODR_Reg |= (0x01 << position);
 800043e:	4b58      	ldr	r3, [pc, #352]	@ (80005a0 <vDoSetPin+0x1c4>)
 8000440:	699b      	ldr	r3, [r3, #24]
 8000442:	2101      	movs	r1, #1
 8000444:	68fa      	ldr	r2, [r7, #12]
 8000446:	fa01 f202 	lsl.w	r2, r1, r2
 800044a:	4611      	mov	r1, r2
 800044c:	4a54      	ldr	r2, [pc, #336]	@ (80005a0 <vDoSetPin+0x1c4>)
 800044e:	430b      	orrs	r3, r1
 8000450:	6193      	str	r3, [r2, #24]
            debug = AHB1_GPIOA->GPIOx_ODR.u32GPIOx_ODR_Reg;
 8000452:	4b53      	ldr	r3, [pc, #332]	@ (80005a0 <vDoSetPin+0x1c4>)
 8000454:	699b      	ldr	r3, [r3, #24]
 8000456:	4a53      	ldr	r2, [pc, #332]	@ (80005a4 <vDoSetPin+0x1c8>)
 8000458:	6013      	str	r3, [r2, #0]
            break; // Exit the switch after each case
 800045a:	e09a      	b.n	8000592 <vDoSetPin+0x1b6>
        case PORTB:
            // Clear the existing state for the specified pin
            AHB1_GPIOB->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 800045c:	4b52      	ldr	r3, [pc, #328]	@ (80005a8 <vDoSetPin+0x1cc>)
 800045e:	699b      	ldr	r3, [r3, #24]
 8000460:	2101      	movs	r1, #1
 8000462:	68fa      	ldr	r2, [r7, #12]
 8000464:	fa01 f202 	lsl.w	r2, r1, r2
 8000468:	43d2      	mvns	r2, r2
 800046a:	4611      	mov	r1, r2
 800046c:	4a4e      	ldr	r2, [pc, #312]	@ (80005a8 <vDoSetPin+0x1cc>)
 800046e:	400b      	ands	r3, r1
 8000470:	6193      	str	r3, [r2, #24]
            // Set the new mode for the specified pin
            AHB1_GPIOB->GPIOx_ODR.u32GPIOx_ODR_Reg |= (0x01 << position);
 8000472:	4b4d      	ldr	r3, [pc, #308]	@ (80005a8 <vDoSetPin+0x1cc>)
 8000474:	699b      	ldr	r3, [r3, #24]
 8000476:	2101      	movs	r1, #1
 8000478:	68fa      	ldr	r2, [r7, #12]
 800047a:	fa01 f202 	lsl.w	r2, r1, r2
 800047e:	4611      	mov	r1, r2
 8000480:	4a49      	ldr	r2, [pc, #292]	@ (80005a8 <vDoSetPin+0x1cc>)
 8000482:	430b      	orrs	r3, r1
 8000484:	6193      	str	r3, [r2, #24]
            break;
 8000486:	e084      	b.n	8000592 <vDoSetPin+0x1b6>
        case PORTC:
            // Clear the existing state for the specified pin
            AHB1_GPIOC->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 8000488:	4b48      	ldr	r3, [pc, #288]	@ (80005ac <vDoSetPin+0x1d0>)
 800048a:	699b      	ldr	r3, [r3, #24]
 800048c:	2101      	movs	r1, #1
 800048e:	68fa      	ldr	r2, [r7, #12]
 8000490:	fa01 f202 	lsl.w	r2, r1, r2
 8000494:	43d2      	mvns	r2, r2
 8000496:	4611      	mov	r1, r2
 8000498:	4a44      	ldr	r2, [pc, #272]	@ (80005ac <vDoSetPin+0x1d0>)
 800049a:	400b      	ands	r3, r1
 800049c:	6193      	str	r3, [r2, #24]
            // Set the new mode for the specified pin
            AHB1_GPIOC->GPIOx_ODR.u32GPIOx_ODR_Reg |= (0x01 << position);
 800049e:	4b43      	ldr	r3, [pc, #268]	@ (80005ac <vDoSetPin+0x1d0>)
 80004a0:	699b      	ldr	r3, [r3, #24]
 80004a2:	2101      	movs	r1, #1
 80004a4:	68fa      	ldr	r2, [r7, #12]
 80004a6:	fa01 f202 	lsl.w	r2, r1, r2
 80004aa:	4611      	mov	r1, r2
 80004ac:	4a3f      	ldr	r2, [pc, #252]	@ (80005ac <vDoSetPin+0x1d0>)
 80004ae:	430b      	orrs	r3, r1
 80004b0:	6193      	str	r3, [r2, #24]
            break;
 80004b2:	e06e      	b.n	8000592 <vDoSetPin+0x1b6>
        case PORTD:
            // Clear the existing state for the specified pin
            AHB1_GPIOD->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 80004b4:	4b3e      	ldr	r3, [pc, #248]	@ (80005b0 <vDoSetPin+0x1d4>)
 80004b6:	699b      	ldr	r3, [r3, #24]
 80004b8:	2101      	movs	r1, #1
 80004ba:	68fa      	ldr	r2, [r7, #12]
 80004bc:	fa01 f202 	lsl.w	r2, r1, r2
 80004c0:	43d2      	mvns	r2, r2
 80004c2:	4611      	mov	r1, r2
 80004c4:	4a3a      	ldr	r2, [pc, #232]	@ (80005b0 <vDoSetPin+0x1d4>)
 80004c6:	400b      	ands	r3, r1
 80004c8:	6193      	str	r3, [r2, #24]
            // Set the new mode for the specified pin
            AHB1_GPIOD->GPIOx_ODR.u32GPIOx_ODR_Reg |= (0x01 << position);
 80004ca:	4b39      	ldr	r3, [pc, #228]	@ (80005b0 <vDoSetPin+0x1d4>)
 80004cc:	699b      	ldr	r3, [r3, #24]
 80004ce:	2101      	movs	r1, #1
 80004d0:	68fa      	ldr	r2, [r7, #12]
 80004d2:	fa01 f202 	lsl.w	r2, r1, r2
 80004d6:	4611      	mov	r1, r2
 80004d8:	4a35      	ldr	r2, [pc, #212]	@ (80005b0 <vDoSetPin+0x1d4>)
 80004da:	430b      	orrs	r3, r1
 80004dc:	6193      	str	r3, [r2, #24]
            break;
 80004de:	e058      	b.n	8000592 <vDoSetPin+0x1b6>
        case PORTE:
            // Clear the existing state for the specified pin
            AHB1_GPIOE->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 80004e0:	4b34      	ldr	r3, [pc, #208]	@ (80005b4 <vDoSetPin+0x1d8>)
 80004e2:	699b      	ldr	r3, [r3, #24]
 80004e4:	2101      	movs	r1, #1
 80004e6:	68fa      	ldr	r2, [r7, #12]
 80004e8:	fa01 f202 	lsl.w	r2, r1, r2
 80004ec:	43d2      	mvns	r2, r2
 80004ee:	4611      	mov	r1, r2
 80004f0:	4a30      	ldr	r2, [pc, #192]	@ (80005b4 <vDoSetPin+0x1d8>)
 80004f2:	400b      	ands	r3, r1
 80004f4:	6193      	str	r3, [r2, #24]
            // Set the new mode for the specified pin
            AHB1_GPIOE->GPIOx_ODR.u32GPIOx_ODR_Reg |= (0x01 << position);
 80004f6:	4b2f      	ldr	r3, [pc, #188]	@ (80005b4 <vDoSetPin+0x1d8>)
 80004f8:	699b      	ldr	r3, [r3, #24]
 80004fa:	2101      	movs	r1, #1
 80004fc:	68fa      	ldr	r2, [r7, #12]
 80004fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000502:	4611      	mov	r1, r2
 8000504:	4a2b      	ldr	r2, [pc, #172]	@ (80005b4 <vDoSetPin+0x1d8>)
 8000506:	430b      	orrs	r3, r1
 8000508:	6193      	str	r3, [r2, #24]
            break;
 800050a:	e042      	b.n	8000592 <vDoSetPin+0x1b6>
        case PORTF:
            // Clear the existing state for the specified pin
            AHB1_GPIOF->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 800050c:	4b2a      	ldr	r3, [pc, #168]	@ (80005b8 <vDoSetPin+0x1dc>)
 800050e:	699b      	ldr	r3, [r3, #24]
 8000510:	2101      	movs	r1, #1
 8000512:	68fa      	ldr	r2, [r7, #12]
 8000514:	fa01 f202 	lsl.w	r2, r1, r2
 8000518:	43d2      	mvns	r2, r2
 800051a:	4611      	mov	r1, r2
 800051c:	4a26      	ldr	r2, [pc, #152]	@ (80005b8 <vDoSetPin+0x1dc>)
 800051e:	400b      	ands	r3, r1
 8000520:	6193      	str	r3, [r2, #24]
            // Set the new mode for the specified pin
            AHB1_GPIOF->GPIOx_ODR.u32GPIOx_ODR_Reg |= (0x01 << position);
 8000522:	4b25      	ldr	r3, [pc, #148]	@ (80005b8 <vDoSetPin+0x1dc>)
 8000524:	699b      	ldr	r3, [r3, #24]
 8000526:	2101      	movs	r1, #1
 8000528:	68fa      	ldr	r2, [r7, #12]
 800052a:	fa01 f202 	lsl.w	r2, r1, r2
 800052e:	4611      	mov	r1, r2
 8000530:	4a21      	ldr	r2, [pc, #132]	@ (80005b8 <vDoSetPin+0x1dc>)
 8000532:	430b      	orrs	r3, r1
 8000534:	6193      	str	r3, [r2, #24]
            break;
 8000536:	e02c      	b.n	8000592 <vDoSetPin+0x1b6>
        case PORTG:
            // Clear the existing state for the specified pin
            AHB1_GPIOG->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 8000538:	4b20      	ldr	r3, [pc, #128]	@ (80005bc <vDoSetPin+0x1e0>)
 800053a:	699b      	ldr	r3, [r3, #24]
 800053c:	2101      	movs	r1, #1
 800053e:	68fa      	ldr	r2, [r7, #12]
 8000540:	fa01 f202 	lsl.w	r2, r1, r2
 8000544:	43d2      	mvns	r2, r2
 8000546:	4611      	mov	r1, r2
 8000548:	4a1c      	ldr	r2, [pc, #112]	@ (80005bc <vDoSetPin+0x1e0>)
 800054a:	400b      	ands	r3, r1
 800054c:	6193      	str	r3, [r2, #24]
            // Set the new mode for the specified pin
            AHB1_GPIOG->GPIOx_ODR.u32GPIOx_ODR_Reg |= (0x01 << position);
 800054e:	4b1b      	ldr	r3, [pc, #108]	@ (80005bc <vDoSetPin+0x1e0>)
 8000550:	699b      	ldr	r3, [r3, #24]
 8000552:	2101      	movs	r1, #1
 8000554:	68fa      	ldr	r2, [r7, #12]
 8000556:	fa01 f202 	lsl.w	r2, r1, r2
 800055a:	4611      	mov	r1, r2
 800055c:	4a17      	ldr	r2, [pc, #92]	@ (80005bc <vDoSetPin+0x1e0>)
 800055e:	430b      	orrs	r3, r1
 8000560:	6193      	str	r3, [r2, #24]
            break;
 8000562:	e016      	b.n	8000592 <vDoSetPin+0x1b6>
        case PORTH:
            // Clear the existing state for the specified pin
            AHB1_GPIOH->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 8000564:	4b16      	ldr	r3, [pc, #88]	@ (80005c0 <vDoSetPin+0x1e4>)
 8000566:	699b      	ldr	r3, [r3, #24]
 8000568:	2101      	movs	r1, #1
 800056a:	68fa      	ldr	r2, [r7, #12]
 800056c:	fa01 f202 	lsl.w	r2, r1, r2
 8000570:	43d2      	mvns	r2, r2
 8000572:	4611      	mov	r1, r2
 8000574:	4a12      	ldr	r2, [pc, #72]	@ (80005c0 <vDoSetPin+0x1e4>)
 8000576:	400b      	ands	r3, r1
 8000578:	6193      	str	r3, [r2, #24]
            // Set the new mode for the specified pin
            AHB1_GPIOH->GPIOx_ODR.u32GPIOx_ODR_Reg |= (0x01 << position);
 800057a:	4b11      	ldr	r3, [pc, #68]	@ (80005c0 <vDoSetPin+0x1e4>)
 800057c:	699b      	ldr	r3, [r3, #24]
 800057e:	2101      	movs	r1, #1
 8000580:	68fa      	ldr	r2, [r7, #12]
 8000582:	fa01 f202 	lsl.w	r2, r1, r2
 8000586:	4611      	mov	r1, r2
 8000588:	4a0d      	ldr	r2, [pc, #52]	@ (80005c0 <vDoSetPin+0x1e4>)
 800058a:	430b      	orrs	r3, r1
 800058c:	6193      	str	r3, [r2, #24]
            break;
 800058e:	e000      	b.n	8000592 <vDoSetPin+0x1b6>
        default:
            // Invalid port, do nothing or handle the error accordingly
            break;
 8000590:	bf00      	nop
    }
}
 8000592:	bf00      	nop
 8000594:	3714      	adds	r7, #20
 8000596:	46bd      	mov	sp, r7
 8000598:	f85d 7b04 	ldr.w	r7, [sp], #4
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop
 80005a0:	40020000 	.word	0x40020000
 80005a4:	2000001c 	.word	0x2000001c
 80005a8:	40020400 	.word	0x40020400
 80005ac:	40020800 	.word	0x40020800
 80005b0:	40020c00 	.word	0x40020c00
 80005b4:	40021000 	.word	0x40021000
 80005b8:	40021400 	.word	0x40021400
 80005bc:	40021800 	.word	0x40021800
 80005c0:	40021c00 	.word	0x40021c00

080005c4 <vDoResetPin>:

void vDoResetPin(gpio_ports Port, gpio_pins Pin)
{
 80005c4:	b480      	push	{r7}
 80005c6:	b085      	sub	sp, #20
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	4603      	mov	r3, r0
 80005cc:	460a      	mov	r2, r1
 80005ce:	71fb      	strb	r3, [r7, #7]
 80005d0:	4613      	mov	r3, r2
 80005d2:	71bb      	strb	r3, [r7, #6]
    // Calculate the position of the pin in the ODR register
	uint32 position = Pin;
 80005d4:	79bb      	ldrb	r3, [r7, #6]
 80005d6:	60fb      	str	r3, [r7, #12]

    switch (Port)
 80005d8:	79fb      	ldrb	r3, [r7, #7]
 80005da:	2b07      	cmp	r3, #7
 80005dc:	d87a      	bhi.n	80006d4 <vDoResetPin+0x110>
 80005de:	a201      	add	r2, pc, #4	@ (adr r2, 80005e4 <vDoResetPin+0x20>)
 80005e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80005e4:	08000605 	.word	0x08000605
 80005e8:	0800062d 	.word	0x0800062d
 80005ec:	08000645 	.word	0x08000645
 80005f0:	0800065d 	.word	0x0800065d
 80005f4:	08000675 	.word	0x08000675
 80005f8:	0800068d 	.word	0x0800068d
 80005fc:	080006a5 	.word	0x080006a5
 8000600:	080006bd 	.word	0x080006bd
    {
        case PORTA:
            // Clear the existing state for the specified pin
        	debug = AHB1_GPIOA->GPIOx_ODR.u32GPIOx_ODR_Reg;
 8000604:	4b37      	ldr	r3, [pc, #220]	@ (80006e4 <vDoResetPin+0x120>)
 8000606:	699b      	ldr	r3, [r3, #24]
 8000608:	4a37      	ldr	r2, [pc, #220]	@ (80006e8 <vDoResetPin+0x124>)
 800060a:	6013      	str	r3, [r2, #0]
            AHB1_GPIOA->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 800060c:	4b35      	ldr	r3, [pc, #212]	@ (80006e4 <vDoResetPin+0x120>)
 800060e:	699b      	ldr	r3, [r3, #24]
 8000610:	2101      	movs	r1, #1
 8000612:	68fa      	ldr	r2, [r7, #12]
 8000614:	fa01 f202 	lsl.w	r2, r1, r2
 8000618:	43d2      	mvns	r2, r2
 800061a:	4611      	mov	r1, r2
 800061c:	4a31      	ldr	r2, [pc, #196]	@ (80006e4 <vDoResetPin+0x120>)
 800061e:	400b      	ands	r3, r1
 8000620:	6193      	str	r3, [r2, #24]
            debug = AHB1_GPIOA->GPIOx_ODR.u32GPIOx_ODR_Reg;
 8000622:	4b30      	ldr	r3, [pc, #192]	@ (80006e4 <vDoResetPin+0x120>)
 8000624:	699b      	ldr	r3, [r3, #24]
 8000626:	4a30      	ldr	r2, [pc, #192]	@ (80006e8 <vDoResetPin+0x124>)
 8000628:	6013      	str	r3, [r2, #0]
            break; // Exit the switch after each case
 800062a:	e054      	b.n	80006d6 <vDoResetPin+0x112>
        case PORTB:
            // Clear the existing state for the specified pin
            AHB1_GPIOB->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 800062c:	4b2f      	ldr	r3, [pc, #188]	@ (80006ec <vDoResetPin+0x128>)
 800062e:	699b      	ldr	r3, [r3, #24]
 8000630:	2101      	movs	r1, #1
 8000632:	68fa      	ldr	r2, [r7, #12]
 8000634:	fa01 f202 	lsl.w	r2, r1, r2
 8000638:	43d2      	mvns	r2, r2
 800063a:	4611      	mov	r1, r2
 800063c:	4a2b      	ldr	r2, [pc, #172]	@ (80006ec <vDoResetPin+0x128>)
 800063e:	400b      	ands	r3, r1
 8000640:	6193      	str	r3, [r2, #24]
            break;
 8000642:	e048      	b.n	80006d6 <vDoResetPin+0x112>
        case PORTC:
            // Clear the existing state for the specified pin
            AHB1_GPIOC->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 8000644:	4b2a      	ldr	r3, [pc, #168]	@ (80006f0 <vDoResetPin+0x12c>)
 8000646:	699b      	ldr	r3, [r3, #24]
 8000648:	2101      	movs	r1, #1
 800064a:	68fa      	ldr	r2, [r7, #12]
 800064c:	fa01 f202 	lsl.w	r2, r1, r2
 8000650:	43d2      	mvns	r2, r2
 8000652:	4611      	mov	r1, r2
 8000654:	4a26      	ldr	r2, [pc, #152]	@ (80006f0 <vDoResetPin+0x12c>)
 8000656:	400b      	ands	r3, r1
 8000658:	6193      	str	r3, [r2, #24]
            break;
 800065a:	e03c      	b.n	80006d6 <vDoResetPin+0x112>
        case PORTD:
            // Clear the existing state for the specified pin
            AHB1_GPIOD->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 800065c:	4b25      	ldr	r3, [pc, #148]	@ (80006f4 <vDoResetPin+0x130>)
 800065e:	699b      	ldr	r3, [r3, #24]
 8000660:	2101      	movs	r1, #1
 8000662:	68fa      	ldr	r2, [r7, #12]
 8000664:	fa01 f202 	lsl.w	r2, r1, r2
 8000668:	43d2      	mvns	r2, r2
 800066a:	4611      	mov	r1, r2
 800066c:	4a21      	ldr	r2, [pc, #132]	@ (80006f4 <vDoResetPin+0x130>)
 800066e:	400b      	ands	r3, r1
 8000670:	6193      	str	r3, [r2, #24]
            break;
 8000672:	e030      	b.n	80006d6 <vDoResetPin+0x112>
        case PORTE:
            // Clear the existing state for the specified pin
            AHB1_GPIOE->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 8000674:	4b20      	ldr	r3, [pc, #128]	@ (80006f8 <vDoResetPin+0x134>)
 8000676:	699b      	ldr	r3, [r3, #24]
 8000678:	2101      	movs	r1, #1
 800067a:	68fa      	ldr	r2, [r7, #12]
 800067c:	fa01 f202 	lsl.w	r2, r1, r2
 8000680:	43d2      	mvns	r2, r2
 8000682:	4611      	mov	r1, r2
 8000684:	4a1c      	ldr	r2, [pc, #112]	@ (80006f8 <vDoResetPin+0x134>)
 8000686:	400b      	ands	r3, r1
 8000688:	6193      	str	r3, [r2, #24]
            break;
 800068a:	e024      	b.n	80006d6 <vDoResetPin+0x112>
        case PORTF:
            // Clear the existing state for the specified pin
            AHB1_GPIOF->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 800068c:	4b1b      	ldr	r3, [pc, #108]	@ (80006fc <vDoResetPin+0x138>)
 800068e:	699b      	ldr	r3, [r3, #24]
 8000690:	2101      	movs	r1, #1
 8000692:	68fa      	ldr	r2, [r7, #12]
 8000694:	fa01 f202 	lsl.w	r2, r1, r2
 8000698:	43d2      	mvns	r2, r2
 800069a:	4611      	mov	r1, r2
 800069c:	4a17      	ldr	r2, [pc, #92]	@ (80006fc <vDoResetPin+0x138>)
 800069e:	400b      	ands	r3, r1
 80006a0:	6193      	str	r3, [r2, #24]
            break;
 80006a2:	e018      	b.n	80006d6 <vDoResetPin+0x112>
        case PORTG:
            // Clear the existing state for the specified pin
            AHB1_GPIOG->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 80006a4:	4b16      	ldr	r3, [pc, #88]	@ (8000700 <vDoResetPin+0x13c>)
 80006a6:	699b      	ldr	r3, [r3, #24]
 80006a8:	2101      	movs	r1, #1
 80006aa:	68fa      	ldr	r2, [r7, #12]
 80006ac:	fa01 f202 	lsl.w	r2, r1, r2
 80006b0:	43d2      	mvns	r2, r2
 80006b2:	4611      	mov	r1, r2
 80006b4:	4a12      	ldr	r2, [pc, #72]	@ (8000700 <vDoResetPin+0x13c>)
 80006b6:	400b      	ands	r3, r1
 80006b8:	6193      	str	r3, [r2, #24]
            break;
 80006ba:	e00c      	b.n	80006d6 <vDoResetPin+0x112>
        case PORTH:
            // Clear the existing state for the specified pin
            AHB1_GPIOH->GPIOx_ODR.u32GPIOx_ODR_Reg &= ~(0x01 << position);
 80006bc:	4b11      	ldr	r3, [pc, #68]	@ (8000704 <vDoResetPin+0x140>)
 80006be:	699b      	ldr	r3, [r3, #24]
 80006c0:	2101      	movs	r1, #1
 80006c2:	68fa      	ldr	r2, [r7, #12]
 80006c4:	fa01 f202 	lsl.w	r2, r1, r2
 80006c8:	43d2      	mvns	r2, r2
 80006ca:	4611      	mov	r1, r2
 80006cc:	4a0d      	ldr	r2, [pc, #52]	@ (8000704 <vDoResetPin+0x140>)
 80006ce:	400b      	ands	r3, r1
 80006d0:	6193      	str	r3, [r2, #24]
            break;
 80006d2:	e000      	b.n	80006d6 <vDoResetPin+0x112>
        default:
            // Invalid port, do nothing or handle the error accordingly
            break;
 80006d4:	bf00      	nop
    }
}
 80006d6:	bf00      	nop
 80006d8:	3714      	adds	r7, #20
 80006da:	46bd      	mov	sp, r7
 80006dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006e0:	4770      	bx	lr
 80006e2:	bf00      	nop
 80006e4:	40020000 	.word	0x40020000
 80006e8:	2000001c 	.word	0x2000001c
 80006ec:	40020400 	.word	0x40020400
 80006f0:	40020800 	.word	0x40020800
 80006f4:	40020c00 	.word	0x40020c00
 80006f8:	40021000 	.word	0x40021000
 80006fc:	40021400 	.word	0x40021400
 8000700:	40021800 	.word	0x40021800
 8000704:	40021c00 	.word	0x40021c00

08000708 <vDoSelectPinSpeed>:
 * Very High Speed:
 *   Used for high-performance applications such as display drivers or high-speed communications.
 */

void vDoSelectPinSpeed(gpio_ports Port, gpio_pins Pin, eModesForGPIOx_OSPEEDR pin_speed)
{
 8000708:	b480      	push	{r7}
 800070a:	b085      	sub	sp, #20
 800070c:	af00      	add	r7, sp, #0
 800070e:	4603      	mov	r3, r0
 8000710:	71fb      	strb	r3, [r7, #7]
 8000712:	460b      	mov	r3, r1
 8000714:	71bb      	strb	r3, [r7, #6]
 8000716:	4613      	mov	r3, r2
 8000718:	717b      	strb	r3, [r7, #5]
    // Calculate the position of the pin in the OSPEEDR register
    uint32 position = Pin * 2;
 800071a:	79bb      	ldrb	r3, [r7, #6]
 800071c:	005b      	lsls	r3, r3, #1
 800071e:	60fb      	str	r3, [r7, #12]

    switch (Port)
 8000720:	79fb      	ldrb	r3, [r7, #7]
 8000722:	2b07      	cmp	r3, #7
 8000724:	f200 80c4 	bhi.w	80008b0 <vDoSelectPinSpeed+0x1a8>
 8000728:	a201      	add	r2, pc, #4	@ (adr r2, 8000730 <vDoSelectPinSpeed+0x28>)
 800072a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800072e:	bf00      	nop
 8000730:	08000751 	.word	0x08000751
 8000734:	0800077d 	.word	0x0800077d
 8000738:	080007a9 	.word	0x080007a9
 800073c:	080007d5 	.word	0x080007d5
 8000740:	08000801 	.word	0x08000801
 8000744:	0800082d 	.word	0x0800082d
 8000748:	08000859 	.word	0x08000859
 800074c:	08000885 	.word	0x08000885
    {
        case PORTA:
            // Clear the existing speed for the specified pin
            AHB1_GPIOA->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg &= ~(0x03 << position);
 8000750:	4b5b      	ldr	r3, [pc, #364]	@ (80008c0 <vDoSelectPinSpeed+0x1b8>)
 8000752:	689b      	ldr	r3, [r3, #8]
 8000754:	2103      	movs	r1, #3
 8000756:	68fa      	ldr	r2, [r7, #12]
 8000758:	fa01 f202 	lsl.w	r2, r1, r2
 800075c:	43d2      	mvns	r2, r2
 800075e:	4611      	mov	r1, r2
 8000760:	4a57      	ldr	r2, [pc, #348]	@ (80008c0 <vDoSelectPinSpeed+0x1b8>)
 8000762:	400b      	ands	r3, r1
 8000764:	6093      	str	r3, [r2, #8]
            // Set the new pin speed for the specified pin
            AHB1_GPIOA->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg |= (pin_speed << position);
 8000766:	4b56      	ldr	r3, [pc, #344]	@ (80008c0 <vDoSelectPinSpeed+0x1b8>)
 8000768:	689b      	ldr	r3, [r3, #8]
 800076a:	7979      	ldrb	r1, [r7, #5]
 800076c:	68fa      	ldr	r2, [r7, #12]
 800076e:	fa01 f202 	lsl.w	r2, r1, r2
 8000772:	4611      	mov	r1, r2
 8000774:	4a52      	ldr	r2, [pc, #328]	@ (80008c0 <vDoSelectPinSpeed+0x1b8>)
 8000776:	430b      	orrs	r3, r1
 8000778:	6093      	str	r3, [r2, #8]
            break; // Exit the switch after each case
 800077a:	e09a      	b.n	80008b2 <vDoSelectPinSpeed+0x1aa>
        case PORTB:
            // Clear the existing speed for the specified pin
            AHB1_GPIOB->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg &= ~(0x03 << position);
 800077c:	4b51      	ldr	r3, [pc, #324]	@ (80008c4 <vDoSelectPinSpeed+0x1bc>)
 800077e:	689b      	ldr	r3, [r3, #8]
 8000780:	2103      	movs	r1, #3
 8000782:	68fa      	ldr	r2, [r7, #12]
 8000784:	fa01 f202 	lsl.w	r2, r1, r2
 8000788:	43d2      	mvns	r2, r2
 800078a:	4611      	mov	r1, r2
 800078c:	4a4d      	ldr	r2, [pc, #308]	@ (80008c4 <vDoSelectPinSpeed+0x1bc>)
 800078e:	400b      	ands	r3, r1
 8000790:	6093      	str	r3, [r2, #8]
            // Set the new pin speed for the specified pin
            AHB1_GPIOB->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg |= (pin_speed << position);
 8000792:	4b4c      	ldr	r3, [pc, #304]	@ (80008c4 <vDoSelectPinSpeed+0x1bc>)
 8000794:	689b      	ldr	r3, [r3, #8]
 8000796:	7979      	ldrb	r1, [r7, #5]
 8000798:	68fa      	ldr	r2, [r7, #12]
 800079a:	fa01 f202 	lsl.w	r2, r1, r2
 800079e:	4611      	mov	r1, r2
 80007a0:	4a48      	ldr	r2, [pc, #288]	@ (80008c4 <vDoSelectPinSpeed+0x1bc>)
 80007a2:	430b      	orrs	r3, r1
 80007a4:	6093      	str	r3, [r2, #8]
            break;
 80007a6:	e084      	b.n	80008b2 <vDoSelectPinSpeed+0x1aa>
        case PORTC:
            // Clear the existing speed for the specified pin
            AHB1_GPIOC->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg &= ~(0x03 << position);
 80007a8:	4b47      	ldr	r3, [pc, #284]	@ (80008c8 <vDoSelectPinSpeed+0x1c0>)
 80007aa:	689b      	ldr	r3, [r3, #8]
 80007ac:	2103      	movs	r1, #3
 80007ae:	68fa      	ldr	r2, [r7, #12]
 80007b0:	fa01 f202 	lsl.w	r2, r1, r2
 80007b4:	43d2      	mvns	r2, r2
 80007b6:	4611      	mov	r1, r2
 80007b8:	4a43      	ldr	r2, [pc, #268]	@ (80008c8 <vDoSelectPinSpeed+0x1c0>)
 80007ba:	400b      	ands	r3, r1
 80007bc:	6093      	str	r3, [r2, #8]
            // Set the new pin speed for the specified pin
            AHB1_GPIOC->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg |= (pin_speed << position);
 80007be:	4b42      	ldr	r3, [pc, #264]	@ (80008c8 <vDoSelectPinSpeed+0x1c0>)
 80007c0:	689b      	ldr	r3, [r3, #8]
 80007c2:	7979      	ldrb	r1, [r7, #5]
 80007c4:	68fa      	ldr	r2, [r7, #12]
 80007c6:	fa01 f202 	lsl.w	r2, r1, r2
 80007ca:	4611      	mov	r1, r2
 80007cc:	4a3e      	ldr	r2, [pc, #248]	@ (80008c8 <vDoSelectPinSpeed+0x1c0>)
 80007ce:	430b      	orrs	r3, r1
 80007d0:	6093      	str	r3, [r2, #8]
            break;
 80007d2:	e06e      	b.n	80008b2 <vDoSelectPinSpeed+0x1aa>
        case PORTD:
            // Clear the existing speed for the specified pin
            AHB1_GPIOD->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg &= ~(0x03 << position);
 80007d4:	4b3d      	ldr	r3, [pc, #244]	@ (80008cc <vDoSelectPinSpeed+0x1c4>)
 80007d6:	689b      	ldr	r3, [r3, #8]
 80007d8:	2103      	movs	r1, #3
 80007da:	68fa      	ldr	r2, [r7, #12]
 80007dc:	fa01 f202 	lsl.w	r2, r1, r2
 80007e0:	43d2      	mvns	r2, r2
 80007e2:	4611      	mov	r1, r2
 80007e4:	4a39      	ldr	r2, [pc, #228]	@ (80008cc <vDoSelectPinSpeed+0x1c4>)
 80007e6:	400b      	ands	r3, r1
 80007e8:	6093      	str	r3, [r2, #8]
            // Set the new pin speed for the specified pin
            AHB1_GPIOD->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg |= (pin_speed << position);
 80007ea:	4b38      	ldr	r3, [pc, #224]	@ (80008cc <vDoSelectPinSpeed+0x1c4>)
 80007ec:	689b      	ldr	r3, [r3, #8]
 80007ee:	7979      	ldrb	r1, [r7, #5]
 80007f0:	68fa      	ldr	r2, [r7, #12]
 80007f2:	fa01 f202 	lsl.w	r2, r1, r2
 80007f6:	4611      	mov	r1, r2
 80007f8:	4a34      	ldr	r2, [pc, #208]	@ (80008cc <vDoSelectPinSpeed+0x1c4>)
 80007fa:	430b      	orrs	r3, r1
 80007fc:	6093      	str	r3, [r2, #8]
            break;
 80007fe:	e058      	b.n	80008b2 <vDoSelectPinSpeed+0x1aa>
        case PORTE:
            // Clear the existing speed for the specified pin
            AHB1_GPIOE->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg &= ~(0x03 << position);
 8000800:	4b33      	ldr	r3, [pc, #204]	@ (80008d0 <vDoSelectPinSpeed+0x1c8>)
 8000802:	689b      	ldr	r3, [r3, #8]
 8000804:	2103      	movs	r1, #3
 8000806:	68fa      	ldr	r2, [r7, #12]
 8000808:	fa01 f202 	lsl.w	r2, r1, r2
 800080c:	43d2      	mvns	r2, r2
 800080e:	4611      	mov	r1, r2
 8000810:	4a2f      	ldr	r2, [pc, #188]	@ (80008d0 <vDoSelectPinSpeed+0x1c8>)
 8000812:	400b      	ands	r3, r1
 8000814:	6093      	str	r3, [r2, #8]
            // Set the new pin speed for the specified pin
            AHB1_GPIOE->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg |= (pin_speed << position);
 8000816:	4b2e      	ldr	r3, [pc, #184]	@ (80008d0 <vDoSelectPinSpeed+0x1c8>)
 8000818:	689b      	ldr	r3, [r3, #8]
 800081a:	7979      	ldrb	r1, [r7, #5]
 800081c:	68fa      	ldr	r2, [r7, #12]
 800081e:	fa01 f202 	lsl.w	r2, r1, r2
 8000822:	4611      	mov	r1, r2
 8000824:	4a2a      	ldr	r2, [pc, #168]	@ (80008d0 <vDoSelectPinSpeed+0x1c8>)
 8000826:	430b      	orrs	r3, r1
 8000828:	6093      	str	r3, [r2, #8]
            break;
 800082a:	e042      	b.n	80008b2 <vDoSelectPinSpeed+0x1aa>
        case PORTF:
            // Clear the existing speed for the specified pin
            AHB1_GPIOF->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg &= ~(0x03 << position);
 800082c:	4b29      	ldr	r3, [pc, #164]	@ (80008d4 <vDoSelectPinSpeed+0x1cc>)
 800082e:	689b      	ldr	r3, [r3, #8]
 8000830:	2103      	movs	r1, #3
 8000832:	68fa      	ldr	r2, [r7, #12]
 8000834:	fa01 f202 	lsl.w	r2, r1, r2
 8000838:	43d2      	mvns	r2, r2
 800083a:	4611      	mov	r1, r2
 800083c:	4a25      	ldr	r2, [pc, #148]	@ (80008d4 <vDoSelectPinSpeed+0x1cc>)
 800083e:	400b      	ands	r3, r1
 8000840:	6093      	str	r3, [r2, #8]
            // Set the new pin speed for the specified pin
            AHB1_GPIOF->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg |= (pin_speed << position);
 8000842:	4b24      	ldr	r3, [pc, #144]	@ (80008d4 <vDoSelectPinSpeed+0x1cc>)
 8000844:	689b      	ldr	r3, [r3, #8]
 8000846:	7979      	ldrb	r1, [r7, #5]
 8000848:	68fa      	ldr	r2, [r7, #12]
 800084a:	fa01 f202 	lsl.w	r2, r1, r2
 800084e:	4611      	mov	r1, r2
 8000850:	4a20      	ldr	r2, [pc, #128]	@ (80008d4 <vDoSelectPinSpeed+0x1cc>)
 8000852:	430b      	orrs	r3, r1
 8000854:	6093      	str	r3, [r2, #8]
            break;
 8000856:	e02c      	b.n	80008b2 <vDoSelectPinSpeed+0x1aa>
        case PORTG:
            // Clear the existing speed for the specified pin
            AHB1_GPIOG->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg &= ~(0x03 << position);
 8000858:	4b1f      	ldr	r3, [pc, #124]	@ (80008d8 <vDoSelectPinSpeed+0x1d0>)
 800085a:	689b      	ldr	r3, [r3, #8]
 800085c:	2103      	movs	r1, #3
 800085e:	68fa      	ldr	r2, [r7, #12]
 8000860:	fa01 f202 	lsl.w	r2, r1, r2
 8000864:	43d2      	mvns	r2, r2
 8000866:	4611      	mov	r1, r2
 8000868:	4a1b      	ldr	r2, [pc, #108]	@ (80008d8 <vDoSelectPinSpeed+0x1d0>)
 800086a:	400b      	ands	r3, r1
 800086c:	6093      	str	r3, [r2, #8]
            // Set the new pin speed for the specified pin
            AHB1_GPIOG->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg |= (pin_speed << position);
 800086e:	4b1a      	ldr	r3, [pc, #104]	@ (80008d8 <vDoSelectPinSpeed+0x1d0>)
 8000870:	689b      	ldr	r3, [r3, #8]
 8000872:	7979      	ldrb	r1, [r7, #5]
 8000874:	68fa      	ldr	r2, [r7, #12]
 8000876:	fa01 f202 	lsl.w	r2, r1, r2
 800087a:	4611      	mov	r1, r2
 800087c:	4a16      	ldr	r2, [pc, #88]	@ (80008d8 <vDoSelectPinSpeed+0x1d0>)
 800087e:	430b      	orrs	r3, r1
 8000880:	6093      	str	r3, [r2, #8]
            break;
 8000882:	e016      	b.n	80008b2 <vDoSelectPinSpeed+0x1aa>
        case PORTH:
            // Clear the existing speed for the specified pin
            AHB1_GPIOH->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg &= ~(0x03 << position);
 8000884:	4b15      	ldr	r3, [pc, #84]	@ (80008dc <vDoSelectPinSpeed+0x1d4>)
 8000886:	689b      	ldr	r3, [r3, #8]
 8000888:	2103      	movs	r1, #3
 800088a:	68fa      	ldr	r2, [r7, #12]
 800088c:	fa01 f202 	lsl.w	r2, r1, r2
 8000890:	43d2      	mvns	r2, r2
 8000892:	4611      	mov	r1, r2
 8000894:	4a11      	ldr	r2, [pc, #68]	@ (80008dc <vDoSelectPinSpeed+0x1d4>)
 8000896:	400b      	ands	r3, r1
 8000898:	6093      	str	r3, [r2, #8]
            // Set the new pin speed for the specified pin
            AHB1_GPIOH->GPIOx_OSPEEDR.GPIOx_OSPEEDR_Reg |= (pin_speed << position);
 800089a:	4b10      	ldr	r3, [pc, #64]	@ (80008dc <vDoSelectPinSpeed+0x1d4>)
 800089c:	689b      	ldr	r3, [r3, #8]
 800089e:	7979      	ldrb	r1, [r7, #5]
 80008a0:	68fa      	ldr	r2, [r7, #12]
 80008a2:	fa01 f202 	lsl.w	r2, r1, r2
 80008a6:	4611      	mov	r1, r2
 80008a8:	4a0c      	ldr	r2, [pc, #48]	@ (80008dc <vDoSelectPinSpeed+0x1d4>)
 80008aa:	430b      	orrs	r3, r1
 80008ac:	6093      	str	r3, [r2, #8]
            break;
 80008ae:	e000      	b.n	80008b2 <vDoSelectPinSpeed+0x1aa>
        default:
            // Invalid port, do nothing or handle the error accordingly
            break;
 80008b0:	bf00      	nop
    }
}
 80008b2:	bf00      	nop
 80008b4:	3714      	adds	r7, #20
 80008b6:	46bd      	mov	sp, r7
 80008b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008bc:	4770      	bx	lr
 80008be:	bf00      	nop
 80008c0:	40020000 	.word	0x40020000
 80008c4:	40020400 	.word	0x40020400
 80008c8:	40020800 	.word	0x40020800
 80008cc:	40020c00 	.word	0x40020c00
 80008d0:	40021000 	.word	0x40021000
 80008d4:	40021400 	.word	0x40021400
 80008d8:	40021800 	.word	0x40021800
 80008dc:	40021c00 	.word	0x40021c00

080008e0 <vDoCfgOutTypePins>:
 * Behavior: When the pin is configured for a logic level "1", it is "inactive" and does not supply any voltage.
 * At a logic level "0", it connects the pin to ground, allowing the load to sink current to GND.
 */

void vDoCfgOutTypePins(gpio_ports Port, gpio_pins Pin, eModesForPIOx_OTYPER output_type)
{
 80008e0:	b480      	push	{r7}
 80008e2:	b085      	sub	sp, #20
 80008e4:	af00      	add	r7, sp, #0
 80008e6:	4603      	mov	r3, r0
 80008e8:	71fb      	strb	r3, [r7, #7]
 80008ea:	460b      	mov	r3, r1
 80008ec:	71bb      	strb	r3, [r7, #6]
 80008ee:	4613      	mov	r3, r2
 80008f0:	717b      	strb	r3, [r7, #5]
    // Calculate the position of the pin in the OTYPER register
	uint32 position = Pin;
 80008f2:	79bb      	ldrb	r3, [r7, #6]
 80008f4:	60fb      	str	r3, [r7, #12]

    switch (Port)
 80008f6:	79fb      	ldrb	r3, [r7, #7]
 80008f8:	2b07      	cmp	r3, #7
 80008fa:	f200 80c3 	bhi.w	8000a84 <vDoCfgOutTypePins+0x1a4>
 80008fe:	a201      	add	r2, pc, #4	@ (adr r2, 8000904 <vDoCfgOutTypePins+0x24>)
 8000900:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000904:	08000925 	.word	0x08000925
 8000908:	08000951 	.word	0x08000951
 800090c:	0800097d 	.word	0x0800097d
 8000910:	080009a9 	.word	0x080009a9
 8000914:	080009d5 	.word	0x080009d5
 8000918:	08000a01 	.word	0x08000a01
 800091c:	08000a2d 	.word	0x08000a2d
 8000920:	08000a59 	.word	0x08000a59
    {
        case PORTA:
            // Clear the existing state for the specified pin
            AHB1_GPIOA->GPIOx_OTYPER.GPIOx_OTYPER_Reg &= ~(0x01 << position);
 8000924:	4b5b      	ldr	r3, [pc, #364]	@ (8000a94 <vDoCfgOutTypePins+0x1b4>)
 8000926:	685b      	ldr	r3, [r3, #4]
 8000928:	2101      	movs	r1, #1
 800092a:	68fa      	ldr	r2, [r7, #12]
 800092c:	fa01 f202 	lsl.w	r2, r1, r2
 8000930:	43d2      	mvns	r2, r2
 8000932:	4611      	mov	r1, r2
 8000934:	4a57      	ldr	r2, [pc, #348]	@ (8000a94 <vDoCfgOutTypePins+0x1b4>)
 8000936:	400b      	ands	r3, r1
 8000938:	6053      	str	r3, [r2, #4]
            // Set the new mode for the specified pin
            AHB1_GPIOA->GPIOx_OTYPER.GPIOx_OTYPER_Reg |= (output_type << position);
 800093a:	4b56      	ldr	r3, [pc, #344]	@ (8000a94 <vDoCfgOutTypePins+0x1b4>)
 800093c:	685b      	ldr	r3, [r3, #4]
 800093e:	7979      	ldrb	r1, [r7, #5]
 8000940:	68fa      	ldr	r2, [r7, #12]
 8000942:	fa01 f202 	lsl.w	r2, r1, r2
 8000946:	4611      	mov	r1, r2
 8000948:	4a52      	ldr	r2, [pc, #328]	@ (8000a94 <vDoCfgOutTypePins+0x1b4>)
 800094a:	430b      	orrs	r3, r1
 800094c:	6053      	str	r3, [r2, #4]
            break; // Exit the switch after each case
 800094e:	e09a      	b.n	8000a86 <vDoCfgOutTypePins+0x1a6>
        case PORTB:
            // Clear the existing state for the specified pin
            AHB1_GPIOB->GPIOx_OTYPER.GPIOx_OTYPER_Reg &= ~(0x01 << position);
 8000950:	4b51      	ldr	r3, [pc, #324]	@ (8000a98 <vDoCfgOutTypePins+0x1b8>)
 8000952:	685b      	ldr	r3, [r3, #4]
 8000954:	2101      	movs	r1, #1
 8000956:	68fa      	ldr	r2, [r7, #12]
 8000958:	fa01 f202 	lsl.w	r2, r1, r2
 800095c:	43d2      	mvns	r2, r2
 800095e:	4611      	mov	r1, r2
 8000960:	4a4d      	ldr	r2, [pc, #308]	@ (8000a98 <vDoCfgOutTypePins+0x1b8>)
 8000962:	400b      	ands	r3, r1
 8000964:	6053      	str	r3, [r2, #4]
            // Set the new mode for the specified pin
            AHB1_GPIOB->GPIOx_OTYPER.GPIOx_OTYPER_Reg |= (output_type << position);
 8000966:	4b4c      	ldr	r3, [pc, #304]	@ (8000a98 <vDoCfgOutTypePins+0x1b8>)
 8000968:	685b      	ldr	r3, [r3, #4]
 800096a:	7979      	ldrb	r1, [r7, #5]
 800096c:	68fa      	ldr	r2, [r7, #12]
 800096e:	fa01 f202 	lsl.w	r2, r1, r2
 8000972:	4611      	mov	r1, r2
 8000974:	4a48      	ldr	r2, [pc, #288]	@ (8000a98 <vDoCfgOutTypePins+0x1b8>)
 8000976:	430b      	orrs	r3, r1
 8000978:	6053      	str	r3, [r2, #4]
            break;
 800097a:	e084      	b.n	8000a86 <vDoCfgOutTypePins+0x1a6>
        case PORTC:
            // Clear the existing state for the specified pin
            AHB1_GPIOC->GPIOx_OTYPER.GPIOx_OTYPER_Reg &= ~(0x01 << position);
 800097c:	4b47      	ldr	r3, [pc, #284]	@ (8000a9c <vDoCfgOutTypePins+0x1bc>)
 800097e:	685b      	ldr	r3, [r3, #4]
 8000980:	2101      	movs	r1, #1
 8000982:	68fa      	ldr	r2, [r7, #12]
 8000984:	fa01 f202 	lsl.w	r2, r1, r2
 8000988:	43d2      	mvns	r2, r2
 800098a:	4611      	mov	r1, r2
 800098c:	4a43      	ldr	r2, [pc, #268]	@ (8000a9c <vDoCfgOutTypePins+0x1bc>)
 800098e:	400b      	ands	r3, r1
 8000990:	6053      	str	r3, [r2, #4]
            // Set the new mode for the specified pin
            AHB1_GPIOC->GPIOx_OTYPER.GPIOx_OTYPER_Reg |= (output_type << position);
 8000992:	4b42      	ldr	r3, [pc, #264]	@ (8000a9c <vDoCfgOutTypePins+0x1bc>)
 8000994:	685b      	ldr	r3, [r3, #4]
 8000996:	7979      	ldrb	r1, [r7, #5]
 8000998:	68fa      	ldr	r2, [r7, #12]
 800099a:	fa01 f202 	lsl.w	r2, r1, r2
 800099e:	4611      	mov	r1, r2
 80009a0:	4a3e      	ldr	r2, [pc, #248]	@ (8000a9c <vDoCfgOutTypePins+0x1bc>)
 80009a2:	430b      	orrs	r3, r1
 80009a4:	6053      	str	r3, [r2, #4]
            break;
 80009a6:	e06e      	b.n	8000a86 <vDoCfgOutTypePins+0x1a6>
        case PORTD:
            // Clear the existing state for the specified pin
            AHB1_GPIOD->GPIOx_OTYPER.GPIOx_OTYPER_Reg &= ~(0x01 << position);
 80009a8:	4b3d      	ldr	r3, [pc, #244]	@ (8000aa0 <vDoCfgOutTypePins+0x1c0>)
 80009aa:	685b      	ldr	r3, [r3, #4]
 80009ac:	2101      	movs	r1, #1
 80009ae:	68fa      	ldr	r2, [r7, #12]
 80009b0:	fa01 f202 	lsl.w	r2, r1, r2
 80009b4:	43d2      	mvns	r2, r2
 80009b6:	4611      	mov	r1, r2
 80009b8:	4a39      	ldr	r2, [pc, #228]	@ (8000aa0 <vDoCfgOutTypePins+0x1c0>)
 80009ba:	400b      	ands	r3, r1
 80009bc:	6053      	str	r3, [r2, #4]
            // Set the new mode for the specified pin
            AHB1_GPIOD->GPIOx_OTYPER.GPIOx_OTYPER_Reg |= (output_type << position);
 80009be:	4b38      	ldr	r3, [pc, #224]	@ (8000aa0 <vDoCfgOutTypePins+0x1c0>)
 80009c0:	685b      	ldr	r3, [r3, #4]
 80009c2:	7979      	ldrb	r1, [r7, #5]
 80009c4:	68fa      	ldr	r2, [r7, #12]
 80009c6:	fa01 f202 	lsl.w	r2, r1, r2
 80009ca:	4611      	mov	r1, r2
 80009cc:	4a34      	ldr	r2, [pc, #208]	@ (8000aa0 <vDoCfgOutTypePins+0x1c0>)
 80009ce:	430b      	orrs	r3, r1
 80009d0:	6053      	str	r3, [r2, #4]
            break;
 80009d2:	e058      	b.n	8000a86 <vDoCfgOutTypePins+0x1a6>
        case PORTE:
            // Clear the existing state for the specified pin
            AHB1_GPIOE->GPIOx_OTYPER.GPIOx_OTYPER_Reg &= ~(0x01 << position);
 80009d4:	4b33      	ldr	r3, [pc, #204]	@ (8000aa4 <vDoCfgOutTypePins+0x1c4>)
 80009d6:	685b      	ldr	r3, [r3, #4]
 80009d8:	2101      	movs	r1, #1
 80009da:	68fa      	ldr	r2, [r7, #12]
 80009dc:	fa01 f202 	lsl.w	r2, r1, r2
 80009e0:	43d2      	mvns	r2, r2
 80009e2:	4611      	mov	r1, r2
 80009e4:	4a2f      	ldr	r2, [pc, #188]	@ (8000aa4 <vDoCfgOutTypePins+0x1c4>)
 80009e6:	400b      	ands	r3, r1
 80009e8:	6053      	str	r3, [r2, #4]
            // Set the new mode for the specified pin
            AHB1_GPIOE->GPIOx_OTYPER.GPIOx_OTYPER_Reg |= (output_type << position);
 80009ea:	4b2e      	ldr	r3, [pc, #184]	@ (8000aa4 <vDoCfgOutTypePins+0x1c4>)
 80009ec:	685b      	ldr	r3, [r3, #4]
 80009ee:	7979      	ldrb	r1, [r7, #5]
 80009f0:	68fa      	ldr	r2, [r7, #12]
 80009f2:	fa01 f202 	lsl.w	r2, r1, r2
 80009f6:	4611      	mov	r1, r2
 80009f8:	4a2a      	ldr	r2, [pc, #168]	@ (8000aa4 <vDoCfgOutTypePins+0x1c4>)
 80009fa:	430b      	orrs	r3, r1
 80009fc:	6053      	str	r3, [r2, #4]
            break;
 80009fe:	e042      	b.n	8000a86 <vDoCfgOutTypePins+0x1a6>
        case PORTF:
            // Clear the existing state for the specified pin
            AHB1_GPIOF->GPIOx_OTYPER.GPIOx_OTYPER_Reg &= ~(0x01 << position);
 8000a00:	4b29      	ldr	r3, [pc, #164]	@ (8000aa8 <vDoCfgOutTypePins+0x1c8>)
 8000a02:	685b      	ldr	r3, [r3, #4]
 8000a04:	2101      	movs	r1, #1
 8000a06:	68fa      	ldr	r2, [r7, #12]
 8000a08:	fa01 f202 	lsl.w	r2, r1, r2
 8000a0c:	43d2      	mvns	r2, r2
 8000a0e:	4611      	mov	r1, r2
 8000a10:	4a25      	ldr	r2, [pc, #148]	@ (8000aa8 <vDoCfgOutTypePins+0x1c8>)
 8000a12:	400b      	ands	r3, r1
 8000a14:	6053      	str	r3, [r2, #4]
            // Set the new mode for the specified pin
            AHB1_GPIOF->GPIOx_OTYPER.GPIOx_OTYPER_Reg |= (output_type << position);
 8000a16:	4b24      	ldr	r3, [pc, #144]	@ (8000aa8 <vDoCfgOutTypePins+0x1c8>)
 8000a18:	685b      	ldr	r3, [r3, #4]
 8000a1a:	7979      	ldrb	r1, [r7, #5]
 8000a1c:	68fa      	ldr	r2, [r7, #12]
 8000a1e:	fa01 f202 	lsl.w	r2, r1, r2
 8000a22:	4611      	mov	r1, r2
 8000a24:	4a20      	ldr	r2, [pc, #128]	@ (8000aa8 <vDoCfgOutTypePins+0x1c8>)
 8000a26:	430b      	orrs	r3, r1
 8000a28:	6053      	str	r3, [r2, #4]
            break;
 8000a2a:	e02c      	b.n	8000a86 <vDoCfgOutTypePins+0x1a6>
        case PORTG:
            // Clear the existing state for the specified pin
            AHB1_GPIOG->GPIOx_OTYPER.GPIOx_OTYPER_Reg &= ~(0x01 << position);
 8000a2c:	4b1f      	ldr	r3, [pc, #124]	@ (8000aac <vDoCfgOutTypePins+0x1cc>)
 8000a2e:	685b      	ldr	r3, [r3, #4]
 8000a30:	2101      	movs	r1, #1
 8000a32:	68fa      	ldr	r2, [r7, #12]
 8000a34:	fa01 f202 	lsl.w	r2, r1, r2
 8000a38:	43d2      	mvns	r2, r2
 8000a3a:	4611      	mov	r1, r2
 8000a3c:	4a1b      	ldr	r2, [pc, #108]	@ (8000aac <vDoCfgOutTypePins+0x1cc>)
 8000a3e:	400b      	ands	r3, r1
 8000a40:	6053      	str	r3, [r2, #4]
            // Set the new mode for the specified pin
            AHB1_GPIOG->GPIOx_OTYPER.GPIOx_OTYPER_Reg |= (output_type << position);
 8000a42:	4b1a      	ldr	r3, [pc, #104]	@ (8000aac <vDoCfgOutTypePins+0x1cc>)
 8000a44:	685b      	ldr	r3, [r3, #4]
 8000a46:	7979      	ldrb	r1, [r7, #5]
 8000a48:	68fa      	ldr	r2, [r7, #12]
 8000a4a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a4e:	4611      	mov	r1, r2
 8000a50:	4a16      	ldr	r2, [pc, #88]	@ (8000aac <vDoCfgOutTypePins+0x1cc>)
 8000a52:	430b      	orrs	r3, r1
 8000a54:	6053      	str	r3, [r2, #4]
            break;
 8000a56:	e016      	b.n	8000a86 <vDoCfgOutTypePins+0x1a6>
        case PORTH:
            // Clear the existing state for the specified pin
            AHB1_GPIOH->GPIOx_OTYPER.GPIOx_OTYPER_Reg &= ~(0x01 << position);
 8000a58:	4b15      	ldr	r3, [pc, #84]	@ (8000ab0 <vDoCfgOutTypePins+0x1d0>)
 8000a5a:	685b      	ldr	r3, [r3, #4]
 8000a5c:	2101      	movs	r1, #1
 8000a5e:	68fa      	ldr	r2, [r7, #12]
 8000a60:	fa01 f202 	lsl.w	r2, r1, r2
 8000a64:	43d2      	mvns	r2, r2
 8000a66:	4611      	mov	r1, r2
 8000a68:	4a11      	ldr	r2, [pc, #68]	@ (8000ab0 <vDoCfgOutTypePins+0x1d0>)
 8000a6a:	400b      	ands	r3, r1
 8000a6c:	6053      	str	r3, [r2, #4]
            // Set the new mode for the specified pin
            AHB1_GPIOH->GPIOx_OTYPER.GPIOx_OTYPER_Reg |= (output_type << position);
 8000a6e:	4b10      	ldr	r3, [pc, #64]	@ (8000ab0 <vDoCfgOutTypePins+0x1d0>)
 8000a70:	685b      	ldr	r3, [r3, #4]
 8000a72:	7979      	ldrb	r1, [r7, #5]
 8000a74:	68fa      	ldr	r2, [r7, #12]
 8000a76:	fa01 f202 	lsl.w	r2, r1, r2
 8000a7a:	4611      	mov	r1, r2
 8000a7c:	4a0c      	ldr	r2, [pc, #48]	@ (8000ab0 <vDoCfgOutTypePins+0x1d0>)
 8000a7e:	430b      	orrs	r3, r1
 8000a80:	6053      	str	r3, [r2, #4]
            break;
 8000a82:	e000      	b.n	8000a86 <vDoCfgOutTypePins+0x1a6>
        default:
            // Invalid port, do nothing or handle the error accordingly
            break;
 8000a84:	bf00      	nop
    }
}
 8000a86:	bf00      	nop
 8000a88:	3714      	adds	r7, #20
 8000a8a:	46bd      	mov	sp, r7
 8000a8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a90:	4770      	bx	lr
 8000a92:	bf00      	nop
 8000a94:	40020000 	.word	0x40020000
 8000a98:	40020400 	.word	0x40020400
 8000a9c:	40020800 	.word	0x40020800
 8000aa0:	40020c00 	.word	0x40020c00
 8000aa4:	40021000 	.word	0x40021000
 8000aa8:	40021400 	.word	0x40021400
 8000aac:	40021800 	.word	0x40021800
 8000ab0:	40021c00 	.word	0x40021c00

08000ab4 <vDoCfgInputOutputTypePins>:
 * 	eNoPullUpOrPullDown
 *	ePullUp
 *	ePullDown
 */
void vDoCfgInputOutputTypePins(gpio_ports Port, gpio_pins Pin, eModesForGPIOx_PUPDR io_type)
{
 8000ab4:	b480      	push	{r7}
 8000ab6:	b085      	sub	sp, #20
 8000ab8:	af00      	add	r7, sp, #0
 8000aba:	4603      	mov	r3, r0
 8000abc:	71fb      	strb	r3, [r7, #7]
 8000abe:	460b      	mov	r3, r1
 8000ac0:	71bb      	strb	r3, [r7, #6]
 8000ac2:	4613      	mov	r3, r2
 8000ac4:	717b      	strb	r3, [r7, #5]
    // Calculate the position of the pin in the MODER register
	uint32 position = Pin * 2;
 8000ac6:	79bb      	ldrb	r3, [r7, #6]
 8000ac8:	005b      	lsls	r3, r3, #1
 8000aca:	60fb      	str	r3, [r7, #12]

    switch (Port)
 8000acc:	79fb      	ldrb	r3, [r7, #7]
 8000ace:	2b07      	cmp	r3, #7
 8000ad0:	f200 80c4 	bhi.w	8000c5c <vDoCfgInputOutputTypePins+0x1a8>
 8000ad4:	a201      	add	r2, pc, #4	@ (adr r2, 8000adc <vDoCfgInputOutputTypePins+0x28>)
 8000ad6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ada:	bf00      	nop
 8000adc:	08000afd 	.word	0x08000afd
 8000ae0:	08000b29 	.word	0x08000b29
 8000ae4:	08000b55 	.word	0x08000b55
 8000ae8:	08000b81 	.word	0x08000b81
 8000aec:	08000bad 	.word	0x08000bad
 8000af0:	08000bd9 	.word	0x08000bd9
 8000af4:	08000c05 	.word	0x08000c05
 8000af8:	08000c31 	.word	0x08000c31
    {
        case PORTA:
            // Clear the existing value for the specified pin
            AHB1_GPIOA->GPIOx_PUPDR.GPIOx_PUPDR_Reg &= ~(0x03 << position);
 8000afc:	4b5b      	ldr	r3, [pc, #364]	@ (8000c6c <vDoCfgInputOutputTypePins+0x1b8>)
 8000afe:	691b      	ldr	r3, [r3, #16]
 8000b00:	2103      	movs	r1, #3
 8000b02:	68fa      	ldr	r2, [r7, #12]
 8000b04:	fa01 f202 	lsl.w	r2, r1, r2
 8000b08:	43d2      	mvns	r2, r2
 8000b0a:	4611      	mov	r1, r2
 8000b0c:	4a57      	ldr	r2, [pc, #348]	@ (8000c6c <vDoCfgInputOutputTypePins+0x1b8>)
 8000b0e:	400b      	ands	r3, r1
 8000b10:	6113      	str	r3, [r2, #16]
            // Set the new value of config pullup/pulldown for the specified pin
            AHB1_GPIOA->GPIOx_PUPDR.GPIOx_PUPDR_Reg |= (io_type << position);
 8000b12:	4b56      	ldr	r3, [pc, #344]	@ (8000c6c <vDoCfgInputOutputTypePins+0x1b8>)
 8000b14:	691b      	ldr	r3, [r3, #16]
 8000b16:	7979      	ldrb	r1, [r7, #5]
 8000b18:	68fa      	ldr	r2, [r7, #12]
 8000b1a:	fa01 f202 	lsl.w	r2, r1, r2
 8000b1e:	4611      	mov	r1, r2
 8000b20:	4a52      	ldr	r2, [pc, #328]	@ (8000c6c <vDoCfgInputOutputTypePins+0x1b8>)
 8000b22:	430b      	orrs	r3, r1
 8000b24:	6113      	str	r3, [r2, #16]
            break; // Important: Exit the switch after each case
 8000b26:	e09a      	b.n	8000c5e <vDoCfgInputOutputTypePins+0x1aa>
        case PORTB:
            // Clear the existing value for the specified pin
            AHB1_GPIOB->GPIOx_PUPDR.GPIOx_PUPDR_Reg &= ~(0x03 << position);
 8000b28:	4b51      	ldr	r3, [pc, #324]	@ (8000c70 <vDoCfgInputOutputTypePins+0x1bc>)
 8000b2a:	691b      	ldr	r3, [r3, #16]
 8000b2c:	2103      	movs	r1, #3
 8000b2e:	68fa      	ldr	r2, [r7, #12]
 8000b30:	fa01 f202 	lsl.w	r2, r1, r2
 8000b34:	43d2      	mvns	r2, r2
 8000b36:	4611      	mov	r1, r2
 8000b38:	4a4d      	ldr	r2, [pc, #308]	@ (8000c70 <vDoCfgInputOutputTypePins+0x1bc>)
 8000b3a:	400b      	ands	r3, r1
 8000b3c:	6113      	str	r3, [r2, #16]
            // Set the new value of config pullup/pulldown for the specified pin
            AHB1_GPIOB->GPIOx_PUPDR.GPIOx_PUPDR_Reg |= (io_type << position);
 8000b3e:	4b4c      	ldr	r3, [pc, #304]	@ (8000c70 <vDoCfgInputOutputTypePins+0x1bc>)
 8000b40:	691b      	ldr	r3, [r3, #16]
 8000b42:	7979      	ldrb	r1, [r7, #5]
 8000b44:	68fa      	ldr	r2, [r7, #12]
 8000b46:	fa01 f202 	lsl.w	r2, r1, r2
 8000b4a:	4611      	mov	r1, r2
 8000b4c:	4a48      	ldr	r2, [pc, #288]	@ (8000c70 <vDoCfgInputOutputTypePins+0x1bc>)
 8000b4e:	430b      	orrs	r3, r1
 8000b50:	6113      	str	r3, [r2, #16]
            break;
 8000b52:	e084      	b.n	8000c5e <vDoCfgInputOutputTypePins+0x1aa>
        case PORTC:
            // Clear the existing value for the specified pin
            AHB1_GPIOC->GPIOx_PUPDR.GPIOx_PUPDR_Reg &= ~(0x03 << position);
 8000b54:	4b47      	ldr	r3, [pc, #284]	@ (8000c74 <vDoCfgInputOutputTypePins+0x1c0>)
 8000b56:	691b      	ldr	r3, [r3, #16]
 8000b58:	2103      	movs	r1, #3
 8000b5a:	68fa      	ldr	r2, [r7, #12]
 8000b5c:	fa01 f202 	lsl.w	r2, r1, r2
 8000b60:	43d2      	mvns	r2, r2
 8000b62:	4611      	mov	r1, r2
 8000b64:	4a43      	ldr	r2, [pc, #268]	@ (8000c74 <vDoCfgInputOutputTypePins+0x1c0>)
 8000b66:	400b      	ands	r3, r1
 8000b68:	6113      	str	r3, [r2, #16]
            // Set the new value of config pullup/pulldown for the specified pin
            AHB1_GPIOC->GPIOx_PUPDR.GPIOx_PUPDR_Reg |= (io_type << position);
 8000b6a:	4b42      	ldr	r3, [pc, #264]	@ (8000c74 <vDoCfgInputOutputTypePins+0x1c0>)
 8000b6c:	691b      	ldr	r3, [r3, #16]
 8000b6e:	7979      	ldrb	r1, [r7, #5]
 8000b70:	68fa      	ldr	r2, [r7, #12]
 8000b72:	fa01 f202 	lsl.w	r2, r1, r2
 8000b76:	4611      	mov	r1, r2
 8000b78:	4a3e      	ldr	r2, [pc, #248]	@ (8000c74 <vDoCfgInputOutputTypePins+0x1c0>)
 8000b7a:	430b      	orrs	r3, r1
 8000b7c:	6113      	str	r3, [r2, #16]
            break;
 8000b7e:	e06e      	b.n	8000c5e <vDoCfgInputOutputTypePins+0x1aa>
        case PORTD:
            // Clear the existing value for the specified pin
            AHB1_GPIOD->GPIOx_PUPDR.GPIOx_PUPDR_Reg &= ~(0x03 << position);
 8000b80:	4b3d      	ldr	r3, [pc, #244]	@ (8000c78 <vDoCfgInputOutputTypePins+0x1c4>)
 8000b82:	691b      	ldr	r3, [r3, #16]
 8000b84:	2103      	movs	r1, #3
 8000b86:	68fa      	ldr	r2, [r7, #12]
 8000b88:	fa01 f202 	lsl.w	r2, r1, r2
 8000b8c:	43d2      	mvns	r2, r2
 8000b8e:	4611      	mov	r1, r2
 8000b90:	4a39      	ldr	r2, [pc, #228]	@ (8000c78 <vDoCfgInputOutputTypePins+0x1c4>)
 8000b92:	400b      	ands	r3, r1
 8000b94:	6113      	str	r3, [r2, #16]
            // Set the new value of config pullup/pulldown for the specified pin
            AHB1_GPIOD->GPIOx_PUPDR.GPIOx_PUPDR_Reg |= (io_type << position);
 8000b96:	4b38      	ldr	r3, [pc, #224]	@ (8000c78 <vDoCfgInputOutputTypePins+0x1c4>)
 8000b98:	691b      	ldr	r3, [r3, #16]
 8000b9a:	7979      	ldrb	r1, [r7, #5]
 8000b9c:	68fa      	ldr	r2, [r7, #12]
 8000b9e:	fa01 f202 	lsl.w	r2, r1, r2
 8000ba2:	4611      	mov	r1, r2
 8000ba4:	4a34      	ldr	r2, [pc, #208]	@ (8000c78 <vDoCfgInputOutputTypePins+0x1c4>)
 8000ba6:	430b      	orrs	r3, r1
 8000ba8:	6113      	str	r3, [r2, #16]
            break;
 8000baa:	e058      	b.n	8000c5e <vDoCfgInputOutputTypePins+0x1aa>
        case PORTE:
            // Clear the existing value for the specified pin
            AHB1_GPIOE->GPIOx_PUPDR.GPIOx_PUPDR_Reg &= ~(0x03 << position);
 8000bac:	4b33      	ldr	r3, [pc, #204]	@ (8000c7c <vDoCfgInputOutputTypePins+0x1c8>)
 8000bae:	691b      	ldr	r3, [r3, #16]
 8000bb0:	2103      	movs	r1, #3
 8000bb2:	68fa      	ldr	r2, [r7, #12]
 8000bb4:	fa01 f202 	lsl.w	r2, r1, r2
 8000bb8:	43d2      	mvns	r2, r2
 8000bba:	4611      	mov	r1, r2
 8000bbc:	4a2f      	ldr	r2, [pc, #188]	@ (8000c7c <vDoCfgInputOutputTypePins+0x1c8>)
 8000bbe:	400b      	ands	r3, r1
 8000bc0:	6113      	str	r3, [r2, #16]
            // Set the new value of config pullup/pulldown for the specified pin
            AHB1_GPIOE->GPIOx_PUPDR.GPIOx_PUPDR_Reg |= (io_type << position);
 8000bc2:	4b2e      	ldr	r3, [pc, #184]	@ (8000c7c <vDoCfgInputOutputTypePins+0x1c8>)
 8000bc4:	691b      	ldr	r3, [r3, #16]
 8000bc6:	7979      	ldrb	r1, [r7, #5]
 8000bc8:	68fa      	ldr	r2, [r7, #12]
 8000bca:	fa01 f202 	lsl.w	r2, r1, r2
 8000bce:	4611      	mov	r1, r2
 8000bd0:	4a2a      	ldr	r2, [pc, #168]	@ (8000c7c <vDoCfgInputOutputTypePins+0x1c8>)
 8000bd2:	430b      	orrs	r3, r1
 8000bd4:	6113      	str	r3, [r2, #16]
            break;
 8000bd6:	e042      	b.n	8000c5e <vDoCfgInputOutputTypePins+0x1aa>
        case PORTF:
            // Clear the existing value for the specified pin
            AHB1_GPIOF->GPIOx_PUPDR.GPIOx_PUPDR_Reg &= ~(0x03 << position);
 8000bd8:	4b29      	ldr	r3, [pc, #164]	@ (8000c80 <vDoCfgInputOutputTypePins+0x1cc>)
 8000bda:	691b      	ldr	r3, [r3, #16]
 8000bdc:	2103      	movs	r1, #3
 8000bde:	68fa      	ldr	r2, [r7, #12]
 8000be0:	fa01 f202 	lsl.w	r2, r1, r2
 8000be4:	43d2      	mvns	r2, r2
 8000be6:	4611      	mov	r1, r2
 8000be8:	4a25      	ldr	r2, [pc, #148]	@ (8000c80 <vDoCfgInputOutputTypePins+0x1cc>)
 8000bea:	400b      	ands	r3, r1
 8000bec:	6113      	str	r3, [r2, #16]
            // Set the new value of config pullup/pulldown for the specified pin
            AHB1_GPIOF->GPIOx_PUPDR.GPIOx_PUPDR_Reg |= (io_type << position);
 8000bee:	4b24      	ldr	r3, [pc, #144]	@ (8000c80 <vDoCfgInputOutputTypePins+0x1cc>)
 8000bf0:	691b      	ldr	r3, [r3, #16]
 8000bf2:	7979      	ldrb	r1, [r7, #5]
 8000bf4:	68fa      	ldr	r2, [r7, #12]
 8000bf6:	fa01 f202 	lsl.w	r2, r1, r2
 8000bfa:	4611      	mov	r1, r2
 8000bfc:	4a20      	ldr	r2, [pc, #128]	@ (8000c80 <vDoCfgInputOutputTypePins+0x1cc>)
 8000bfe:	430b      	orrs	r3, r1
 8000c00:	6113      	str	r3, [r2, #16]
            break;
 8000c02:	e02c      	b.n	8000c5e <vDoCfgInputOutputTypePins+0x1aa>
        case PORTG:
            // Clear the existing value for the specified pin
            AHB1_GPIOG->GPIOx_PUPDR.GPIOx_PUPDR_Reg &= ~(0x03 << position);
 8000c04:	4b1f      	ldr	r3, [pc, #124]	@ (8000c84 <vDoCfgInputOutputTypePins+0x1d0>)
 8000c06:	691b      	ldr	r3, [r3, #16]
 8000c08:	2103      	movs	r1, #3
 8000c0a:	68fa      	ldr	r2, [r7, #12]
 8000c0c:	fa01 f202 	lsl.w	r2, r1, r2
 8000c10:	43d2      	mvns	r2, r2
 8000c12:	4611      	mov	r1, r2
 8000c14:	4a1b      	ldr	r2, [pc, #108]	@ (8000c84 <vDoCfgInputOutputTypePins+0x1d0>)
 8000c16:	400b      	ands	r3, r1
 8000c18:	6113      	str	r3, [r2, #16]
            // Set the new value of config pullup/pulldown for the specified pin
            AHB1_GPIOG->GPIOx_PUPDR.GPIOx_PUPDR_Reg |= (io_type << position);
 8000c1a:	4b1a      	ldr	r3, [pc, #104]	@ (8000c84 <vDoCfgInputOutputTypePins+0x1d0>)
 8000c1c:	691b      	ldr	r3, [r3, #16]
 8000c1e:	7979      	ldrb	r1, [r7, #5]
 8000c20:	68fa      	ldr	r2, [r7, #12]
 8000c22:	fa01 f202 	lsl.w	r2, r1, r2
 8000c26:	4611      	mov	r1, r2
 8000c28:	4a16      	ldr	r2, [pc, #88]	@ (8000c84 <vDoCfgInputOutputTypePins+0x1d0>)
 8000c2a:	430b      	orrs	r3, r1
 8000c2c:	6113      	str	r3, [r2, #16]
            break;
 8000c2e:	e016      	b.n	8000c5e <vDoCfgInputOutputTypePins+0x1aa>
        case PORTH:
            // Clear the existing value for the specified pin
            AHB1_GPIOH->GPIOx_PUPDR.GPIOx_PUPDR_Reg &= ~(0x03 << position);
 8000c30:	4b15      	ldr	r3, [pc, #84]	@ (8000c88 <vDoCfgInputOutputTypePins+0x1d4>)
 8000c32:	691b      	ldr	r3, [r3, #16]
 8000c34:	2103      	movs	r1, #3
 8000c36:	68fa      	ldr	r2, [r7, #12]
 8000c38:	fa01 f202 	lsl.w	r2, r1, r2
 8000c3c:	43d2      	mvns	r2, r2
 8000c3e:	4611      	mov	r1, r2
 8000c40:	4a11      	ldr	r2, [pc, #68]	@ (8000c88 <vDoCfgInputOutputTypePins+0x1d4>)
 8000c42:	400b      	ands	r3, r1
 8000c44:	6113      	str	r3, [r2, #16]
            // Set the new value of config pullup/pulldown for the specified pin
            AHB1_GPIOH->GPIOx_PUPDR.GPIOx_PUPDR_Reg |= (io_type << position);
 8000c46:	4b10      	ldr	r3, [pc, #64]	@ (8000c88 <vDoCfgInputOutputTypePins+0x1d4>)
 8000c48:	691b      	ldr	r3, [r3, #16]
 8000c4a:	7979      	ldrb	r1, [r7, #5]
 8000c4c:	68fa      	ldr	r2, [r7, #12]
 8000c4e:	fa01 f202 	lsl.w	r2, r1, r2
 8000c52:	4611      	mov	r1, r2
 8000c54:	4a0c      	ldr	r2, [pc, #48]	@ (8000c88 <vDoCfgInputOutputTypePins+0x1d4>)
 8000c56:	430b      	orrs	r3, r1
 8000c58:	6113      	str	r3, [r2, #16]
            break;
 8000c5a:	e000      	b.n	8000c5e <vDoCfgInputOutputTypePins+0x1aa>
        default:
            // Invalid port, do nothing or handle the error accordingly
            break;
 8000c5c:	bf00      	nop
    }
}
 8000c5e:	bf00      	nop
 8000c60:	3714      	adds	r7, #20
 8000c62:	46bd      	mov	sp, r7
 8000c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c68:	4770      	bx	lr
 8000c6a:	bf00      	nop
 8000c6c:	40020000 	.word	0x40020000
 8000c70:	40020400 	.word	0x40020400
 8000c74:	40020800 	.word	0x40020800
 8000c78:	40020c00 	.word	0x40020c00
 8000c7c:	40021000 	.word	0x40021000
 8000c80:	40021400 	.word	0x40021400
 8000c84:	40021800 	.word	0x40021800
 8000c88:	40021c00 	.word	0x40021c00

08000c8c <vDoSetStateUserLed>:
#include "memmap_gpio.h"
#include "gpio_drv.h"
#include "peripheral_pins.h"

void vDoSetStateUserLed(bool pin_state)
{
 8000c8c:	b580      	push	{r7, lr}
 8000c8e:	b082      	sub	sp, #8
 8000c90:	af00      	add	r7, sp, #0
 8000c92:	4603      	mov	r3, r0
 8000c94:	71fb      	strb	r3, [r7, #7]
	/* To be safe it's only boolean */
	//pin_state = pin_state != 0;
	vDoConfigurePin(PORTA,PA5, eGeneralPurposeOutput);
 8000c96:	2201      	movs	r2, #1
 8000c98:	2105      	movs	r1, #5
 8000c9a:	2000      	movs	r0, #0
 8000c9c:	f7ff fab2 	bl	8000204 <vDoConfigurePin>
	vDoSelectPinSpeed(PORTA,PA5, eOSpeedLowSpeed);
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	2105      	movs	r1, #5
 8000ca4:	2000      	movs	r0, #0
 8000ca6:	f7ff fd2f 	bl	8000708 <vDoSelectPinSpeed>
	vDoCfgOutTypePins(PORTA,PA5, eOutputPushPull);
 8000caa:	2200      	movs	r2, #0
 8000cac:	2105      	movs	r1, #5
 8000cae:	2000      	movs	r0, #0
 8000cb0:	f7ff fe16 	bl	80008e0 <vDoCfgOutTypePins>
	vDoCfgInputOutputTypePins(PORTA,PA5,eNoPullUpOrPullDown);
 8000cb4:	2200      	movs	r2, #0
 8000cb6:	2105      	movs	r1, #5
 8000cb8:	2000      	movs	r0, #0
 8000cba:	f7ff fefb 	bl	8000ab4 <vDoCfgInputOutputTypePins>

	if(pin_state != 0)
 8000cbe:	79fb      	ldrb	r3, [r7, #7]
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d004      	beq.n	8000cce <vDoSetStateUserLed+0x42>
	{
		vDoSetPin(PORTA,PA5);
 8000cc4:	2105      	movs	r1, #5
 8000cc6:	2000      	movs	r0, #0
 8000cc8:	f7ff fb88 	bl	80003dc <vDoSetPin>
	}
	else
	{
		vDoResetPin(PORTA,PA5);
	}
}
 8000ccc:	e003      	b.n	8000cd6 <vDoSetStateUserLed+0x4a>
		vDoResetPin(PORTA,PA5);
 8000cce:	2105      	movs	r1, #5
 8000cd0:	2000      	movs	r0, #0
 8000cd2:	f7ff fc77 	bl	80005c4 <vDoResetPin>
}
 8000cd6:	bf00      	nop
 8000cd8:	3708      	adds	r7, #8
 8000cda:	46bd      	mov	sp, r7
 8000cdc:	bd80      	pop	{r7, pc}
	...

08000ce0 <main>:
/* Configure the offset for every PORT */
#define GPIOA_OFFSET (0x0000UL)
#define GPIOAEN (1U<<0)

int main()
{
 8000ce0:	b580      	push	{r7, lr}
 8000ce2:	af00      	add	r7, sp, #0
	RCC_AHB1EN_R |=GPIOAEN;
 8000ce4:	4b06      	ldr	r3, [pc, #24]	@ (8000d00 <main+0x20>)
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	4a05      	ldr	r2, [pc, #20]	@ (8000d00 <main+0x20>)
 8000cea:	f043 0301 	orr.w	r3, r3, #1
 8000cee:	6013      	str	r3, [r2, #0]

	vDoSetStateUserLed(1);
 8000cf0:	2001      	movs	r0, #1
 8000cf2:	f7ff ffcb 	bl	8000c8c <vDoSetStateUserLed>

	while(1)
	{

	//	for (volatile int i = 0; i < 100; i++); // Delay
		vDoSetStateUserLed(0);
 8000cf6:	2000      	movs	r0, #0
 8000cf8:	f7ff ffc8 	bl	8000c8c <vDoSetStateUserLed>
 8000cfc:	e7fb      	b.n	8000cf6 <main+0x16>
 8000cfe:	bf00      	nop
 8000d00:	40023830 	.word	0x40023830

08000d04 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000d04:	480d      	ldr	r0, [pc, #52]	@ (8000d3c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000d06:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000d08:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000d0c:	480c      	ldr	r0, [pc, #48]	@ (8000d40 <LoopForever+0x6>)
  ldr r1, =_edata
 8000d0e:	490d      	ldr	r1, [pc, #52]	@ (8000d44 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000d10:	4a0d      	ldr	r2, [pc, #52]	@ (8000d48 <LoopForever+0xe>)
  movs r3, #0
 8000d12:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000d14:	e002      	b.n	8000d1c <LoopCopyDataInit>

08000d16 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000d16:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000d18:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000d1a:	3304      	adds	r3, #4

08000d1c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000d1c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000d1e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000d20:	d3f9      	bcc.n	8000d16 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000d22:	4a0a      	ldr	r2, [pc, #40]	@ (8000d4c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000d24:	4c0a      	ldr	r4, [pc, #40]	@ (8000d50 <LoopForever+0x16>)
  movs r3, #0
 8000d26:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000d28:	e001      	b.n	8000d2e <LoopFillZerobss>

08000d2a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000d2a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000d2c:	3204      	adds	r2, #4

08000d2e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000d2e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000d30:	d3fb      	bcc.n	8000d2a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000d32:	f000 f811 	bl	8000d58 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000d36:	f7ff ffd3 	bl	8000ce0 <main>

08000d3a <LoopForever>:

LoopForever:
  b LoopForever
 8000d3a:	e7fe      	b.n	8000d3a <LoopForever>
  ldr   r0, =_estack
 8000d3c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000d40:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000d44:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000d48:	08000dc0 	.word	0x08000dc0
  ldr r2, =_sbss
 8000d4c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000d50:	20000020 	.word	0x20000020

08000d54 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000d54:	e7fe      	b.n	8000d54 <ADC_IRQHandler>
	...

08000d58 <__libc_init_array>:
 8000d58:	b570      	push	{r4, r5, r6, lr}
 8000d5a:	4d0d      	ldr	r5, [pc, #52]	@ (8000d90 <__libc_init_array+0x38>)
 8000d5c:	4c0d      	ldr	r4, [pc, #52]	@ (8000d94 <__libc_init_array+0x3c>)
 8000d5e:	1b64      	subs	r4, r4, r5
 8000d60:	10a4      	asrs	r4, r4, #2
 8000d62:	2600      	movs	r6, #0
 8000d64:	42a6      	cmp	r6, r4
 8000d66:	d109      	bne.n	8000d7c <__libc_init_array+0x24>
 8000d68:	4d0b      	ldr	r5, [pc, #44]	@ (8000d98 <__libc_init_array+0x40>)
 8000d6a:	4c0c      	ldr	r4, [pc, #48]	@ (8000d9c <__libc_init_array+0x44>)
 8000d6c:	f000 f818 	bl	8000da0 <_init>
 8000d70:	1b64      	subs	r4, r4, r5
 8000d72:	10a4      	asrs	r4, r4, #2
 8000d74:	2600      	movs	r6, #0
 8000d76:	42a6      	cmp	r6, r4
 8000d78:	d105      	bne.n	8000d86 <__libc_init_array+0x2e>
 8000d7a:	bd70      	pop	{r4, r5, r6, pc}
 8000d7c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d80:	4798      	blx	r3
 8000d82:	3601      	adds	r6, #1
 8000d84:	e7ee      	b.n	8000d64 <__libc_init_array+0xc>
 8000d86:	f855 3b04 	ldr.w	r3, [r5], #4
 8000d8a:	4798      	blx	r3
 8000d8c:	3601      	adds	r6, #1
 8000d8e:	e7f2      	b.n	8000d76 <__libc_init_array+0x1e>
 8000d90:	08000db8 	.word	0x08000db8
 8000d94:	08000db8 	.word	0x08000db8
 8000d98:	08000db8 	.word	0x08000db8
 8000d9c:	08000dbc 	.word	0x08000dbc

08000da0 <_init>:
 8000da0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000da2:	bf00      	nop
 8000da4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000da6:	bc08      	pop	{r3}
 8000da8:	469e      	mov	lr, r3
 8000daa:	4770      	bx	lr

08000dac <_fini>:
 8000dac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dae:	bf00      	nop
 8000db0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000db2:	bc08      	pop	{r3}
 8000db4:	469e      	mov	lr, r3
 8000db6:	4770      	bx	lr
